<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xh.mybatis.mapper.BsStatusMapper">
	<!-- <cache type="xh.mybatis.tools.MybatisRedisCache" eviction="LRU" flushInterval="6000000" 
		size="1024" readOnly="false" /> -->

	<!-- 自定义返回结果集 -->
	<resultMap id="BsStatusMap" type="xh.mybatis.bean.BsStatusBean">
		<id property="bsId" column="bsId" javaType="java.lang.Integer"></id>
		<result property="status" column="status" javaType="java.lang.Integer"></result>
		<result property="groupNum" column="groupNum" javaType="java.lang.Integer"></result>
		<result property="mscNum" column="mscNum" javaType="java.lang.Integer"></result>
		<result property="updateTime" column="updateTime" javaType="java.lang.String"></result>
	</resultMap>


	<!--查询所有 -->
	<select id="selectAllBsStatus" resultType="java.util.HashMap"
		useCache="true">
		select name,a.status,updateTime from xhgmnet_bs_status as
		a,xhgmnet_bs_station as b where a.bsId=b.bsId
	</select>
	<!-- 基站离线总计 -->
	<select id="bsOfflineCount" resultType="int" useCache="true">
		select
		count(*) from view_bsstatus where link!=0 and bsId in(select bsId from
		xhgmnet_bs_station where status=1)
	</select>
	<!-- 基站注册组 -->
	<select id="bsGroupTop5" resultType="map" useCache="true">
		SELECT
		a.bsId,count(a.gourpId) as value,b.name FROM xhgmnet_bs_groupstatus as
		a
		left join xhgmnet_bs_station as b on a.bsId=b.bsId where a.bsId>0
		group by a.bsId order by value desc limit 5
	</select>
	<!-- 基站注册终端 -->
	<select id="bsRadioTop5" resultType="map" useCache="true">
		SELECT
		a.bsId,count(a.userId) as value,b.name FROM
		xhgmnet_operations_userstatus as a
		left join xhgmnet_bs_station as b on
		a.bsId=b.bsId where a.bsId>0 and regStatus in(1,2,3)
		group by a.bsId
		order by value desc limit 5
	</select>
	<!--导出现网基站的运行记录 -->
	<select id="excelToBsStatus" resultType="xh.mybatis.bean.BsStatusBean"
		useCache="true">
		select
		a.bsId,a.name,a.status,
		b.clock_status,b.Returnloss1,b.Returnloss2,b.runtime as
		bscRuntime,b.psm1runtime,b.psm2runtime,
		c.runtime as enbRuntime
		from
		xhgmnet_bs_station a
		left join
		xhgmnet_bsstatus b on a.bsId=b.bsId and
		b.chId=1
		left join
		xhgmnet_enbstatus c on b.bsId=c.enbId
		where a.bsId not
		in(select bsIds
		from xhgmnet_stationalarm) order by a.bsId
		asc;
	</select>
	<!--导出现网基站的运行状态 -->
	<select id="excelToBsRunStatus" resultType="xh.mybatis.bean.BsRunStatusBean"
		useCache="true">
		select a.bsId,a.name,a.hometype,b.link from
		xhgmnet_bs_station as a
		left join view_bsstatus as b on a.bsId=b.bsId
		order by a.bsId
		asc;
	</select>
	<!--基站下的环控fsuId -->
	<select id="fsuIdBySiteId" parameterType="int" resultType="String"
		useCache="true">
		SELECT fsuId
		FROM xhgmnet_emh_config
		WHERE siteId=#{siteId}
		LIMIT 1
	</select>
	<!--基站下的环控状态 -->
	<select id="bsEmh" parameterType="String" resultType="xh.mybatis.bean.EmhBean"
		useCache="true">
		SELECT fsuId, deviceId, singleId, singleType, singleValue,
		level, updateTime
		FROM xhgmnet_emh_sensor_status
		WHERE fsuId = #{fsuId}
		ORDER BY deviceId ASC , singleId ASC
		LIMIT 0 , 100
	</select>
	<!--基站下的环控告警 -->
	<select id="bsEmhAlarm" parameterType="String" resultType="xh.mybatis.bean.EmhBean"
		useCache="true">
		SELECT a.fsuId, a.deviceId, a.singleId, a.singleType,
		a.singleValue,
		a.level, a.updateTime,b.deviceName
		FROM
		xhgmnet_emh_sensor_status as a
		left join xhgmnet_emh_config as b on
		a.deviceId=b.deviceId and a.fsuId=b.fsuId
		WHERE a.fsuId = #{fsuId} and
		a.singleType=0 and a.singleValue!=0
		ORDER BY a.deviceId ASC ,
		a.singleId ASC
		LIMIT 0 , 100
	</select>
	<!--4期所有基站环控告警 -->
	<select id="fourEmhAlarmList" parameterType="map" resultType="map"
		useCache="true">
		SELECT a.fsuId, a.deviceId, a.singleId, a.singleType, a.singleValue,
		a.level, a.updateTime,b.deviceName,b.siteId,b.siteName
		FROM
		xhgmnet_emh_sensor_status as a
		left join xhgmnet_emh_config as b on
		a.deviceId=b.deviceId and a.fsuId=b.fsuId
		WHERE a.singleType=0 and
		a.singleValue!=0
		<if test="door==0">
			and a.deviceId!='170700000000001'
		</if>
		<if test="smoke==0">
			and a.deviceId!='170400000000001'
		</if>
		<if test="red==0">
			and a.deviceId!='170500000000001'
		</if>
		<if test="water==0">
			and a.deviceId!='170300000000001'
		</if>
		<if test="temp==0">
			and a.deviceId!='170100000000001' and
			a.deviceId!='170200000000001'
		</if>
		<if test="ups==0">
			and a.deviceId!='060100000000001'
		</if>
		<if test="i==0">
			and a.deviceId!='920100000000001'
		</if>
		<if test="fsu==0">
			and a.deviceId!='760300000000001'
		</if>



		ORDER BY a.updateTime desc
		LIMIT #{start} , #{limit}
	</select>
	<!--4期所有基站环控告警 -->
	<select id="fourEmhAlarmListCount" parameterType="map"
		resultType="int" useCache="true">
		SELECT count(*) from xhgmnet_emh_sensor_status
		WHERE singleType=0 and
		singleValue!=0
		<if test="door==0">
			and deviceId!='170700000000001'
		</if>
		<if test="smoke==0">
			and deviceId!='170400000000001'
		</if>
		<if test="red==0">
			and deviceId!='170500000000001'
		</if>
		<if test="water==0">
			and deviceId!='170300000000001'
		</if>
		<if test="temp==0">
			and deviceId!='170100000000001' and
			deviceId!='170200000000001'
		</if>
		<if test="ups==0">
			and deviceId!='060100000000001'
		</if>
		<if test="i==0">
			and deviceId!='920100000000001'
		</if>
		<if test="fsu==0">
			and deviceId!='760300000000001'
		</if>
	</select>
	<!--4期基站环控告警数目 -->
	<!-- <select id="bsEmhNowAlarmCount" parameterType="String" resultType="xh.mybatis.bean.EmhBean" 
		useCache="true"> SELECT count(*) WHERE singleType=0 and singleValue!=0 and 
		singleId='092001' </select> -->

	<!--基站下的bsc状态 -->
	<select id="bsc" parameterType="int" resultType="map" useCache="true">

		SELECT *
		FROM xhgmnet_bs_bsc
		WHERE bsId = #{bsId}
		ORDER BY Id ASC
		LIMIT 0,
		30
	</select>
	<!--基站下的bsr状态 -->
	<select id="bsr" parameterType="int" resultType="map" useCache="true">
		select a.bsrIsEnable,b.* from xhgmnet_bs_bsr_config as a
		left join
		xhgmnet_bs_bsr as b on a.bsrId=b.Id and a.bsId=b.bsId
		WHERE a.bsId =
		#{bsId} order by a.bsrId asc


		<!-- SELECT * FROM xhgmnet_bs_bsr WHERE bsId = #{bsId} ORDER BY Id ASC 
			LIMIT 0, 30 -->
	</select>
	<!--基站下的dpx状态 -->
	<select id="dpx" parameterType="int" resultType="map" useCache="true">
		SELECT *
		FROM xhgmnet_bs_dpx
		WHERE bsId = #{bsId}
		ORDER BY Id ASC
		LIMIT 0,
		30
	</select>
	<!--基站下的psm状态 -->
	<select id="psm" parameterType="int" resultType="map" useCache="true">
		SELECT *
		FROM xhgmnet_bs_psm
		WHERE bsId = #{bsId}
		ORDER BY Id ASC
		LIMIT 0,
		30
	</select>
	<!--基站断站列表 -->
	<select id="bsOffList" parameterType="int" resultType="map"
		useCache="true">
		select a.bsId,a.link,b.name,c.time_break as time,d.stats as
		bell from view_bsstatus as a
		left join xhgmnet_bs_station as b on
		a.bsId=b.bsId
		left join (select * from
		xhgmnet_bsstatus_history where
		time_restore is null and link=1) as c
		on a.bsId=c.bsId
		left join
		xhgmnet_bs_status as d on a.bsId=d.bsId
		where a.link!=0 and a.bsId not
		in (select bsIds from
		xhgmnet_stationalarm)
		and b.bsId in(select bsId
		from xhgmnet_bs_station where status=1)
	</select>
	<!--基站断站,声音告警数目 -->
	<select id="bsOffVoiceCount" resultType="int" useCache="true">
		<!-- select
		count(bsId) as total from view_bsstatus where
		bsId not in (select bsIds
		from xhgmnet_stationalarm)
		and bsId not in(select bsId from
		xhgmnet_bs_status where stats=1 and
		link=1)
		and link=1 and bsId
		in(select bsId from xhgmnet_bs_station
		where status=1) -->
		
		select count(neId) as total from xhgmnet_operations_bsfault 
		where sysType=1 and neType=4 and modType=3 and alarmTag=0 and voiceTag=0

	</select>
	<select id="emhVoiceCount" resultType="map" useCache="true">
		select count(modType=3000 or null) as ups,count(modType=3001 or null) as water from xhgmnet_operations_bsfault 
		where sysType=2  and alarmTag=0 and voiceTag=0

	</select>	
	<!--基站区域列表告警 -->
	<select id="bsZoneAlarm" resultType="map" useCache="true"
		parameterType="List">
		select zone as name,period,count(bsId) as value from (
		select
		a.bsId,a.name,a.status,a.type,a.zone,a.level,a.period,b.link,d.deviceAlarmSum
		from xhgmnet_bs_station as a
		left join view_bsstatus as b on
		a.bsId=b.bsId

		left join (select bsId,sum(alarmSum) as deviceAlarmSum
		from (
		select bsId,
		count(working) as alarmSum from xhgmnet_bs_bsc where
		working>0 and
		working!=255 group by bsId
		union all
		select
		a.bsId,count(a.bsrId) as
		alarmSum from xhgmnet_bs_bsr_config as a
		left
		join xhgmnet_bs_bsr as b on a.bsId=b.bsId and a.bsrId=b.Id
		where
		a.bsrIsEnable =1 and b.working>0 and b.working !=255 group by a.bsId
		union all
		select bsId, count(working) as alarmSum from xhgmnet_bs_dpx
		where working>0 and working!=255 and retLoss>0 and fwdPa>0 or
		(retLoss>0 and retLoss &lt;=140)
		group by bsId
		union all
		select bsId,
		count(working) as alarmSum from xhgmnet_bs_psm
		where (bdTmp1>0 or
		bdTmp2>0 or bdTmp3>0) and( dc12=1 or dc301=1 or dc302=1
		or runStatus=1
		or tempStatus=1 or linkStatus=1 or ad!=2) group by bsId
		) as temp group
		by bsId ) as d on a.bsId=d.bsId
		) as tem where
		deviceAlarmSum>0 and
		link=0
		<!-- and period in ( <foreach collection="list" item="id" separator=","> 
			#{id} </foreach> ) -->
		group by zone,period

	</select>
	<!-- 基站告警状态变更 -->
	<update id="bsOffVoiceChange" parameterType="map">
		<if test="tag==1">
			update xhgmnet_bs_status set link=0,stats=0 where bsId in
			(select bsId from
			view_bsstatus where link=0)
		</if>
		<if test="tag==2">
			update xhgmnet_bs_status set link=1 where bsId in (select
			bsId from
			view_bsstatus where link=1)
		</if>
	</update>

	<!-- 更新基站断站告警状态 -->
	<update id="updateAlarmStatus">
		<!-- update xhgmnet_bs_status set stats=1,link=1 where
		bsId in(select bsId from view_bsstatus where link=1) and
		bsId not in
		(select bsIds from xhgmnet_stationalarm) -->
		update xhgmnet_operations_bsfault  set voiceTag=1 where 
		(sysType=1 and neType=4 and modType=3 and alarmTag=0 and voiceTag=0)
		or(sysType=2 and alarmTag=0 and voiceTag=0)
		
	</update>
	<!-- 基站断站统计 -->
	<select id="MapBsOfflineCount" resultType="int" useCache="true">
		select
		count(*) from view_bsstatus where link!=0 and bsId in(select bsId
		from
		xhgmnet_bs_station where status=1)
	</select>
	<!-- 交换中心异常统计 -->
	<select id="MapMscAlarmCount" resultType="int" useCache="true">
		select
		count(typeId) as total from xhgmnet_eastcom_server where runStatus=1
	</select>
	<!-- 调度台异常统计 -->
	<select id="MapDispatchAlarmCount" resultType="int" useCache="true">
		select count(dstId) as total from xhgmnet_dispatch where setupStatus=1
		and flag=0
	</select>

	<!-- 基站异常统计 -->
	<select id="MapBsAlarmCount" resultType="int" useCache="true">
		select
		a.bsId,d.deviceAlarmSum as total
		from join view_bsstatus as a

		left join
		(select bsId,sum(alarmSum) as deviceAlarmSum from (
		select bsId,
		count(working) as alarmSum from xhgmnet_bs_bsc where working>0 and
		working!=255 group by bsId
		union all
		select bsId, count(working) as
		alarmSum from xhgmnet_bs_bsr where working>0 and working!=255 group by
		bsId
		union all
		select bsId, count(working) as alarmSum from
		xhgmnet_bs_dpx where working>0 and working!=255 and retLoss>0 and
		fwdPa>0 group by bsId
		union all
		select bsId, count(working) as alarmSum
		from xhgmnet_bs_psm where working>0 and working!=255 group by bsId
		) as
		temp group by bsId) as d on a.bsId=d.bsId
	</select>
	<!-- tera系统告警基站部分 导出excel -->
	<select id="bsAlarmExcel" resultType="xh.mybatis.bean.BsAlarmExcelBean"
		useCache="true" parameterType="map">
		select a.bsId%1000 as bsId,
		a.id,
		CASE weekly
		WHEN 0 THEN '星期日'
		WHEN 1 THEN '星期一'
		WHEN
		2 THEN '星期二'
		WHEN 3 THEN '星期三'
		WHEN 4 THEN '星期四'
		WHEN 5 THEN '星期五'
		WHEN 6
		THEN '星期六'
		ELSE '未知' END weekly,
		a.time,
		a.from,
		a.severity,
		a.type,
		a.reason,
		a.nowDeal,
		a.imbusiness,
		a.dealResult ,
		a.faultRecoveryTime,
		CASE WHEN a.faultRecoveryTime!="" THEN
		TIMESTAMPDIFF(MINUTE,a.time,a.faultRecoveryTime)
		WHEN
		a.faultRecoveryTime="" THEN ""
		END faultTimeTotal,
		a.content,
		a.faultHandlePerson,
		a.faultRecordPerson,
		a.zbdldm,
		a.faultType,
		a.status,
		a.alarmTag,b.name,b.level,b.status as
		tag,b.hometype,b.period
		from
		xhgmnet_operations_bsfault as a
		left
		join
		xhgmnet_bs_station as b on
		a.bsId%1000=b.bsId 

		where a.time between
		#{startTime} and #{endTime} order by a.time asc
	</select>
	<select id="bsFaultList" resultType="map" useCache="true"
		parameterType="map">

		select
		CASE 
		WHEN a.bsId>=1200 and a.bsId&lt;2000 THEN a.bsId%1000
		ELSE a.bsId
		END bsId,
		
		a.id,
		a.sysType,a.neId,a.neType,a.mscId,a.location,
		a.modType,a.modId,a.subModType,
		a.subModId,a.code,a.category,a.causeCode,a.sureOk,
		a.orderId,
		CASE weekly
		WHEN 0 THEN '星期日'
		WHEN 1 THEN '星期一'
		WHEN
		2 THEN '星期二'
		WHEN 3 THEN '星期三'
		WHEN 4 THEN '星期四'
		WHEN 5 THEN '星期五'
		WHEN 6
		THEN '星期六'
		ELSE '未知' END weekly,
		a.time,
		a.from,
		a.severity,
		a.type,
		a.reason,
		a.nowDeal,
		a.imbusiness,
		a.dealResult ,
		a.faultRecoveryTime,
		CASE WHEN a.faultRecoveryTime!="" THEN
		TIMESTAMPDIFF(MINUTE,a.time,a.faultRecoveryTime)
		WHEN
		a.faultRecoveryTime="" THEN ""
		END faultTimeTotal,
		a.content,
		a.faultHandlePerson,
		a.faultRecordPerson,
		a.zbdldm,
		a.faultType,
		a.status,
		a.level as alarmLevel,
		a.alarmTag,b.name,b.level,b.status as
		tag,b.hometype,b.period,
		c.reason as reason2,c.suggestion as suggestion2
		from
		xhgmnet_operations_bsfault as a
		left join xhgmnet_bs_station as b on a.bsId%1000=b.bsId 
		left join xhgmnet_eastcom_knowledge as c on a.neType=c.neType and 
     	a.modType=c.modType and a.subModType=c.subModType and a.category=c.category 
     	and a.code=c.code  and a.causeCode=c.causeCode and a.sysType=1
		
		
		<!-- (a.bsId%1000=b.bsId and a.neType=1) or (a.subModId%1000=b.bsId and a.neType=2)
		or (a.subModId%1000=b.bsId and a.neType=4) -->
		where a.level&lt;5
		<if test="bsId!=null and bsId!=''">
			and a.bsId=#{bsId}
		</if>
		<if test="startTime!='' and endtime!=''">
			and a.time between #{starttime} and #{endtime}
		</if>
		<if test="alarmTag!=null and alarmTag!=''">
		 and a.alarmTag=#{alarmTag}
		</if>

		<if test="level!=null and level.size()>0">
     	and a.level in(
		<foreach collection="level" item="id" separator=",">
			#{id}
		</foreach>
		)
     	</if>
     	<if test="alarmTag_value!=null and alarmTag_value.size()>0">
     	and a.alarmTag in(
		<foreach collection="alarmTag_value" item="id" separator=",">
			#{id}
		</foreach>
		)
     	</if>
     	<if test="sysType>0">
     	and a.sysType=#{sysType}
     	</if>
     	<if test="alarmType==1">
     	and a.sysType=2 and a.modType=3001
     	</if>
     	<if test="alarmType==2">
     	and a.sysType=2 and a.modType=3000
     	</if>
     	<if test="alarmType==3">
     	and a.neType=2 and a.modType=1000 and a.code=1 and a.category=2
     	</if>
     	<if test="alarmType==4">
     	 and a.neType=4
     	</if>

		order by a.time desc



		limit #{start},#{limit}
	</select>
	<select id="bsFaultListCount" resultType="int" useCache="true"
		parameterType="map">
		select count(*) from xhgmnet_operations_bsfault where level&lt;5
		<if test="bsId!=null and bsId!=''">
			and bsId=#{bsId}
		</if>
		<if test="startTime!='' and endtime!=''">
			and time between #{starttime} and #{endtime}
		</if>
		<if test="alarmTag!=null and alarmTag!=''">
		 and alarmTag=#{alarmTag}
		</if>
		
		<if test="level!=null and level.size()>0">
     	and level in(
		<foreach collection="level" item="id" separator=",">
			#{id}
		</foreach>
		)
     	</if>
     	<if test="alarmTag_value!=null and alarmTag_value.size()>0">
     	and alarmTag in(
		<foreach collection="alarmTag_value" item="id" separator=",">
			#{id}
		</foreach>
		)
     	</if>
      	<if test="sysType>0">
     	and sysType=#{sysType}
     	</if>
     	<if test="alarmType==1">
     	and sysType=2 and modType=3001
     	</if>
     	<if test="alarmType==2">
     	and sysType=2 and modType=3000
     	</if>
     	<if test="alarmType==3">
     	and neType=2 and modType=1000 and code=1 and category=2
     	</if>
     	<if test="alarmType==4">
     	 and neType=4
     	</if>
	</select>
	<!-- tera系统告警基站部分,获取当前的断站列表 -->
	<select id="bsFaultInfo" resultType="xh.mybatis.bean.BsAlarmExcelBean"
		useCache="true" parameterType="map">


		select subModId as bsId,time from
		xhgmnet_eastcom_alarminfo where time
		>#{time} and neType=4 and
		modType=3 and status=0 order by time desc limit 200;


	</select>
	<select id="bsRestoreInfo" resultType="xh.mybatis.bean.BsAlarmExcelBean"
		useCache="true" parameterType="map">
		select subModId as bsId,time,retoreTime
		as faultRecoveryTime,TIMESTAMPDIFF(MINUTE,time,retoreTime) as
		faultTimeTotal from xhgmnet_eastcom_alarminfo where time >#{time} and
		neType=4 and
		modType=3 and status=1 order by time desc limit 200;

	</select>
	<!-- 更新基站故障表 -->
	<update id="editBsFault" parameterType="xh.mybatis.bean.BsAlarmExcelBean">
		update
		xhgmnet_operations_bsfault set
		weekly=#{weekly},time=#{time},`from`=#{from}, severity=#{severity},
		type=#{type}, reason=#{reason}, nowDeal=#{nowDeal},
		imbusiness=#{imbusiness}, dealResult=#{dealResult},
		faultRecoveryTime=#{faultRecoveryTime},
		faultTimeTotal=#{faultTimeTotal}, content=#{content},
		faultHandlePerson=#{faultHandlePerson},
		faultRecordPerson=#{faultRecordPerson},faultType=#{faultType} where
		id=#{id}
	</update>
	<!-- 基站闪断列表 -->
	<select id="bsflash" resultType="map" useCache="true"
		parameterType="map">
		select a.*,TIMESTAMPDIFF(SECOND,a.time_break,a.time_restore) as
		sumtime ,b.name,b.period from xhgmnet_bsstatus_history as a
		left join
		xhgmnet_bs_station as b
		on a.bsId=b.bsId
		where a.time_restore is
		not null
		and (TIMESTAMPDIFF(MINUTE,a.time_break,a.time_restore)) &lt;=
		#{bsflash}
		and a.bsId not in (select bsId from xhgmnet_bs_station where
		period=3)
		<if test="bsId!=null and bsId!=''">
			and a.bsId=#{bsId}
		</if>
		<if test="endtime!=null and endtime!=''">
			and a.time_break between #{starttime} and #{endtime}
		</if>
		order by a.time_break desc
		limit #{start},#{limit}
	</select>

	<!-- 基站闪断列表总数 -->
	<select id="bsflashCount" resultType="int" useCache="true"
		parameterType="map">
		select count(*) from xhgmnet_bsstatus_history
		where time_restore is not
		null and
		(TIMESTAMPDIFF(MINUTE,time_break,time_restore)) &lt;=
		#{bsflash}
		and
		bsId not in (select bsId from xhgmnet_bs_station where
		period=3)
		<if test="bsId!=null and bsId!=''">
			and bsId=#{bsId}
		</if>
		<if test="endtime!=null and endtime!=''">
			and time_break between #{starttime} and #{endtime}
		</if>
	</select>
	<!-- 导出基站闪断列表 -->
	<select id="excelToBsflash" resultType="xh.mybatis.bean.BsFlashBean"
		useCache="true" parameterType="map">
		select a.*,TIMESTAMPDIFF(SECOND,a.time_break,a.time_restore) as
		sumtime ,b.name,b.period from xhgmnet_bsstatus_history as a
		left join
		xhgmnet_bs_station as b
		on a.bsId=b.bsId
		where a.time_restore is
		not null
		and (TIMESTAMPDIFF(MINUTE,a.time_break,a.time_restore)) &lt;=
		#{bsflash}
		and a.bsId not in (select bsId from xhgmnet_bs_station where
		period=3)
		<if test="endtime!=null and endtime!=''">
			and a.time_break between #{starttime} and #{endtime}
		</if>
		order by a.time_break desc
		limit 0,1000
	</select>
</mapper>