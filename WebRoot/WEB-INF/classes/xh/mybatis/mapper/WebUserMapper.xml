<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xh.mybatis.mapper.WebUserMapper">
	<!-- 自定义返回结果集 -->
	<resultMap id="webUserMap" type="xh.mybatis.bean.WebUserBean">
		<id property="userId" column="userId" javaType="java.lang.Integer"></id>
		<result property="user" column="user" javaType="java.lang.String"></result>
		<result property="userPass" column="userPass" javaType="java.lang.String"></result>
		<result property="userName" column="userName" javaType="java.lang.String"></result>
		<result property="sex" column="sex" javaType="java.lang.String"></result>
		<result property="tel" column="tel" javaType="java.lang.String"></result>
		<result property="status" column="status" javaType="java.lang.Integer"></result>
		<result property="createTime" column="createTime" javaType="java.lang.String"></result>

		<result property="roleId" column="roleId" javaType="java.lang.Integer"></result>
		<result property="role" column="role" javaType="java.lang.String"></result>
	</resultMap>
	<!--软件产业中心用户列表 -->
	<!-- <select id="userlist10002" resultType="map" useCache="true"> select 
		userId,user,userName from xhgmnet_web_user where userId in(select userId 
		from xhgmnet_web_role_user where roleId=10002) </select> -->
	<!--根据RoleID角色组用户列表 -->
	<select id="userlistByRoleId" parameterType="java.lang.Integer"
		resultType="map" useCache="true">
		select userId,user,userName from xhgmnet_web_user where userId in(select
		userId from
		xhgmnet_web_role_user where roleId=#{roleId})
	</select>

	<!--根据Role类型查找用户列表 -->
	<select id="userlistByRoleType" parameterType="List" resultType="map"
		useCache="true">
		select userId,user,userName from xhgmnet_web_user where userId
		in(select userId from
		xhgmnet_web_role_user where roleId in(
		<foreach collection="list" item="id" separator=",">
			#{id}
		</foreach>
		))
	</select>
	<!-- <select id="selectUserByUserAndPass" parameterType="xh.mybatis.bean.WebUserBean" 
		resultMap="webUserMap"> select * from xhgmnet_web_user where user=#{user} 
		and userPass=#{userPass} </select> -->
	<!--根据登录用户名,密码查找登录用户 -->
	<select id="selectUserByUserAndPass" parameterType="map"
		resultType="java.util.HashMap">
		select * from xhgmnet_web_user where user=#{user} and userPass=#{userPass}
	</select>
	<!--根据用户名,查找用户信息 -->
	<select id="userInfoByName" parameterType="String"
		resultType="java.util.HashMap">
		select a.*,b.roleId,c.role,c.roleType from xhgmnet_web_user as a
		left join xhgmnet_web_role_user as b on a.userId=b.userId
		left join xhgmnet_web_role as c on b.roleId=c.roleId
	    where user=#{user}
	</select>
		<!--根据用户名,查找用户权限信息 -->
	<select id="userPowerInfoByName" parameterType="String"
		resultType="java.util.HashMap">
		select a.user,b.* from xhgmnet_web_user as a
		left join xhgmnet_web_user_action as b on a.userId=b.userId
	    where user=#{user}
	</select>
	<!--根据权限字段查找用户 -->
	<select id="userPowerListByType" parameterType="map"
		resultType="map">
		select a.userId,b.user from  xhgmnet_web_user_action as a
		  
		left join xhgmnet_web_user as b on a.userId=b.userId
	    where a.${fieldstr}="on"
	</select>	
	<!--根据登录用户名查找登录用户 -->
	<select id="selectUserByUser" parameterType="String" resultMap="webUserMap"
		useCache="true">
		select a.*,b.roleId,c.role,c.roleType,c.parentId from xhgmnet_web_user as a left join
		xhgmnet_web_role_user as b on a.userId=b.userId 
		left join xhgmnet_web_role as c on b.roleId=c.roleId
		
		where user=#{user}
	</select>
	<!--根据用户名查找用户是否存在 -->
	<select id="userIsExists" parameterType="String" resultType="int"
		useCache="true">
		select count(*) from xhgmnet_web_user where user=#{user}
	</select>
	<!--根据用户名查找用户ID -->
	<select id="userIdByUser" parameterType="String" resultType="int"
		useCache="true">
		select userId from xhgmnet_web_user where user=#{user}
	</select>
	<!--添加用户 -->
	<insert id="insertUser" useGeneratedKeys="true" keyProperty="userId"
		parameterType="xh.mybatis.bean.WebUserBean">
		insert into
		xhgmnet_web_user(user,userPass,userName,sex,tel,createTime,unit,unitType,userType)
		values(#{user},#{userPass},#{userName},#{sex},#{tel},#{createTime},#{unit},#{unitType},#{userType})
	</insert>
	<!--添加用户ID到角色关系表 -->
	<insert id="addUserToRole" useGeneratedKeys="true" keyProperty="userId"
		parameterType="xh.mybatis.bean.WebUserBean">
		insert into xhgmnet_web_user(user,userPass,userName,sex,tel,createTime)
		values(#{user},#{userPass},#{userName},#{sex},#{tel},#{createTime})
	</insert>
	<!--用户列表 -->
	<select id="userList" parameterType="map" resultMap="webUserMap"
		useCache="true">
		select a.*,b.roleId,c.role from xhgmnet_web_user as a left join
		xhgmnet_web_role_user as b on
		a.userId=b.userId left join xhgmnet_web_role as c on b.roleId=c.roleId
		
		where 1=1
		
		<if test="userStr!=''">
		and (a.user like CONCAT(#{userStr},'%') or a.userName like CONCAT(#{userStr},'%'))
		</if>
		<if test="roleIdStr>0">
		 and a.userId in (select userId from xhgmnet_web_role_user 
		where roleId=#{roleIdStr})
		</if>
		
		<if test="roleId!=10000">
		 and a.userId in (select userId from xhgmnet_web_role_user 
		where roleId in(select roleId from xhgmnet_web_role where roleId=#{roleId} or parentId=#{roleId}))
		</if>
		
		order by b.roleId asc limit #{start},#{limit}
		<!-- select a.*,b.roleId,c.role from xhgmnet_web_user as a left join
		xhgmnet_web_role_user as b on
		a.userId=b.userId left join xhgmnet_web_role as c on b.roleId=c.roleId
		order by b.roleId asc limit #{start},#{limit} -->
	</select>
	<!--用户记录总数 -->
	<select id="userAllCount" resultType="int" useCache="true" parameterType="map">
		select count(*) from xhgmnet_web_user  
		where 1=1
		
		<if test="userStr!=''">
	    and	(user like CONCAT(#{userStr},'%') or userName like CONCAT(#{userStr},'%'))
		</if>
		<if test="roleIdStr>0">
		 and userId in (select userId from xhgmnet_web_role_user 
		 where roleId=#{roleIdStr})
		</if>
		<if test="roleId!=10000">
		and userId in (select userId from xhgmnet_web_role_user 
		where roleId in(select roleId from xhgmnet_web_role where roleId=#{roleId} or parentId=#{roleId}))
		</if>
	</select>
	<!--判断用户权限是否存在 -->
	<select id="existsUserPower" parameterType="int" resultType="int"
		useCache="true">
		select count(userId) from xhgmnet_web_user_action where userId=#{userId}
	</select>
	<!--获取用户权限 -->
	<select id="getUserPower" parameterType="int" resultType="java.util.HashMap"
		useCache="true">
		select * from xhgmnet_web_user_action where userId=#{userId}
	</select>
	<!--添加用户权限 -->
	<insert id="addUserPower" keyProperty="userId" useGeneratedKeys="true"
		parameterType="xh.mybatis.bean.UserPowerBean">
		insert into xhgmnet_web_user_action
		(userId,o_check_report,o_check_service,o_check_netoptimize,
		o_check_emergency,o_check_work,o_check_change,o_add,
		o_update,o_delete,p_add,p_update,p_delete,p_lock,b_add,
		b_update,b_delete,b_check_joinnet,b_check_quitnet,
		b_check_businesschange,b_check_fault,b_check_communicationsupport,
		b_check_lend,p_power,o_check_fault,o_check_duty,o_check_inspection,o_order)
		values
		(#{userId},#{o_check_report},#{o_check_service},#{o_check_netoptimize},#{o_check_emergency},
		#{o_check_work},#{o_check_change},#{o_add},#{o_update},#{o_delete},
		#{p_add},#{p_update},#{p_delete},#{p_lock},
		#{b_add},#{b_update},#{b_delete},#{b_check_joinnet},#{b_check_quitnet},#{b_check_businesschange},
		#{b_check_fault},#{b_check_communicationsupport},#{b_check_lend},#{p_power},
		#{o_check_fault},#{o_check_duty},#{o_check_inspection},#{o_order})
	</insert>
	<!--修改用户权限 -->
	<update id="updateUserPower" parameterType="xh.mybatis.bean.UserPowerBean">
		update xhgmnet_web_user_action set
		
		 o_check_report=#{o_check_report},
		o_check_service=#{o_check_service},
		o_check_netoptimize=#{o_check_netoptimize},
		o_check_emergency=#{o_check_emergency},
		o_check_work=#{o_check_work},
		o_check_change=#{o_check_change},
		o_add=#{o_add},
		o_update=#{o_update},
		o_delete=#{o_delete},

		p_add=#{p_add},
		p_update=#{p_update},
		p_delete=#{p_delete},
		p_lock=#{p_lock},

		b_add=#{b_add},
		b_update=#{b_update},
		b_delete=#{b_delete},
		b_check_joinnet=#{b_check_joinnet},
		b_check_quitnet=#{b_check_quitnet},
		b_check_businesschange=#{b_check_businesschange},
		b_check_fault=#{b_check_fault},
		b_check_communicationsupport=#{b_check_communicationsupport},
		b_check_lend=#{b_check_lend},
		p_power=#{p_power},
		o_check_inspection=#{o_check_inspection},
		o_check_fault=#{o_check_fault},
		o_check_duty=#{o_check_duty},
		o_order=#{o_order}
		where userId=#{userId}
	</update>
	<!--根据用户ID删除用户 -->
	<delete id="deleteByUserId" parameterType="java.util.List">
		delete from xhgmnet_web_user where userId in(
		<foreach collection="list" item="id" separator=",">
			#{id}
		</foreach>
		)
	</delete>
	<!--更新用户 -->
	<update id="updateByUser" parameterType="xh.mybatis.bean.WebUserBean">
		<choose>
			<when test="userPass!='' and userPass!=null">
				update xhgmnet_web_user set
				userPass=#{userPass},userName=#{userName},sex=#{sex},
				tel=#{tel},unit=#{unit},unitType=#{unitType},userType=#{userType}
				where user=#{user}
			</when>
			<otherwise>
				update xhgmnet_web_user set userName=#{userName},sex=#{sex},
				tel=#{tel},unit=#{unit},unitType=#{unitType},userType=#{userType}
				where user=#{user}
			</otherwise>
		</choose>
	</update>
	<!--给用户加锁 -->
	<update id="lockUser" parameterType="map">
		update xhgmnet_web_user set status=#{lock} where userId=#{id}
	</update>
	<!--根据用户权限获取用户 -->
	<select id="userlistByPower" parameterType="map" resultType="java.util.HashMap"
		useCache="true" statementType="STATEMENT">
		select a.userId,b.user from xhgmnet_web_user_action as a 
		left join xhgmnet_web_user as b on a.userId=b.userId 
		where a.${powerstr}="on"
	</select>

	<!--根据RoleID角色组用户列表(除去指定user) -->
	<select id="userlistByRoleIdExceptUser" parameterType="map"
		resultType="map" useCache="true">
		select userId,user,userName from xhgmnet_web_user where userId in(select
		userId from
		xhgmnet_web_role_user where roleId=#{roleId})  and user != #{user}
	</select>
	
	<!--根据用户权限+RoleID获取用户 -->
	<select id="userlistByPowerAndRoleId" parameterType="map" resultType="java.util.HashMap"
		useCache="true">
		SELECT a.userId,c.`user`,b.roleId FROM xhgmnet_web_user_action AS a 
		LEFT JOIN xhgmnet_web_role_user AS b ON a.userId = b.userId 
		LEFT JOIN xhgmnet_web_user AS c ON a.userId=c.userId 
		WHERE a.${powerstr}="on" and b.roleId=#{roleId}
	</select>

</mapper>
