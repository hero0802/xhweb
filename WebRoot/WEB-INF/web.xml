<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://java.sun.com/xml/ns/javaee"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
    id="WebApp_ID" version="2.5">
    <!-- 配置DispatchcerServlet -->
    <servlet>
        <servlet-name>springDispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- 配置Spring mvc下的配置文件的位置和名称 -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
        <async-supported>true</async-supported>
    </servlet>
    
    <servlet-mapping>
        <servlet-name>springDispatcherServlet</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    
    
    
    <!-- PageOffice Begin -->
    <servlet>
        <servlet-name>poserver</servlet-name>
        <servlet-class>com.zhuozhengsoft.pageoffice.poserver.Server</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>poserver</servlet-name>
        <url-pattern>/poserver.zz</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>poserver</servlet-name>
        <url-pattern>/sealsetup.exe</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>poserver</servlet-name>
        <url-pattern>/posetup.exe</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>poserver</servlet-name>
        <url-pattern>/pageoffice.js</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>poserver</servlet-name>
        <url-pattern>/jquery.min.js</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>poserver</servlet-name>
        <url-pattern>/pobstyle.css</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>adminseal</servlet-name>
        <servlet-class>com.zhuozhengsoft.pageoffice.poserver.AdminSeal</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>adminseal</servlet-name>
        <url-pattern>/adminseal.zz</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>adminseal</servlet-name>
        <url-pattern>/loginseal.zz</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>adminseal</servlet-name>
        <url-pattern>/sealimage.zz</url-pattern>
    </servlet-mapping>
    <mime-mapping>
        <extension>mht</extension>
        <mime-type>message/rfc822</mime-type>
    </mime-mapping>
    <context-param>
        <param-name>adminseal-password</param-name>
        <param-value>111111</param-value>
    </context-param>
    <!-- PageOffice End -->
   <!-- link to MySql begin-->

     <context-param>
            <param-name>adminseal-charset</param-name>
            <param-value>UTF-8</param-value>
     </context-param>
     <context-param>
            <param-name>posealdb-driver</param-name>
            <param-value>com.mysql.jdbc.Driver</param-value>
     </context-param>
     <context-param>
            <param-name>posealdb-url</param-name>                             
            <param-value>jdbc:mysql://192.168.120.161:3309/seal?useUnicode=true&amp;characterEncoding=UTF-8</param-value>
     </context-param>
     <context-param>
            <param-name>posealdb-username</param-name>
            <param-value>root</param-value> </context-param> <context-param>
            <param-name>posealdb-password</param-name>
            <param-value>xinhong12345</param-value>
     </context-param>

     <!-- link to MySql end--> 
    
    
    <filter>
             <filter-name>encodingFilter</filter-name>
             <filter-class>
                        org.springframework.web.filter.CharacterEncodingFilter
             </filter-class>
             <async-supported>true</async-supported>
             <init-param>
                        <param-name>encoding</param-name>
                        <param-value>utf-8</param-value>
             </init-param>
             <init-param>  
            <param-name>forceEncoding</param-name>  
            <param-value>true</param-value>  
        </init-param>  
  </filter>
  <filter-mapping>
             <filter-name>encodingFilter</filter-name>
             <url-pattern>/*</url-pattern>
  </filter-mapping>
    
    
    
   
 <filter>
    <filter-name>checkLogin</filter-name>
    <filter-class>xh.org.filter.LoginFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>checkLogin</filter-name>
    <url-pattern>/main.html</url-pattern>
    <url-pattern>/map.html</url-pattern>
    <url-pattern>/index.html</url-pattern>
    <url-pattern>/Views/*</url-pattern>
  </filter-mapping> 
  
  
<listener>   
<listener-class>   
xh.org.listeners.SingLoginListener   
</listener-class>   
</listener>
<!-- 考核项目检查-->
<!--<listener>
  <description>考核项目检查</description>
  <listener-class>xh.org.listeners.checkListener</listener-class>
 </listener>-->
<!-- 基站故障自动写入 -->
<!-- <listener>
<listener-class>   
xh.org.listeners.WriteBsFaultListenner   
</listener-class>   
</listener> -->


<!--定时获取东信基站话务统计 -->
<!-- <listener>
<listener-class>   
xh.org.listeners.GetEastCallDataListenner  
</listener-class>   
</listener> -->

<listener>
<listener-class>   
xh.org.listeners.TcpServerListenner   
</listener-class>   
</listener>

<!-- 启动定时器，定时同步redis中的session相关数据-->
<!--<listener>
<listener-class>xh.org.listeners.RedisDataListener</listener-class>
</listener>-->
<!--Axis2 config start -->
	<servlet>  
      <servlet-name>AxisServlet</servlet-name>  
        
      <servlet-class>org.apache.axis2.transport.http.AxisServlet</servlet-class>  
      <load-on-startup>1</load-on-startup>  
  </servlet>  
  <servlet>  
      <servlet-name>AxisAdminServlet</servlet-name>  
        
      <servlet-class>  
          org.apache.axis2.webapp.AxisAdminServlet</servlet-class>  
  </servlet>  

    
  <servlet-mapping>  
      <servlet-name>AxisServlet</servlet-name>  
      <url-pattern>/servlet/AxisServlet</url-pattern>  
  </servlet-mapping>  
  
  <servlet-mapping>  
      <servlet-name>AxisServlet</servlet-name>  
      <url-pattern>*.jws</url-pattern>  
  </servlet-mapping>  
  
  <servlet-mapping>  
      <servlet-name>AxisServlet</servlet-name>  
      <url-pattern>/services/*</url-pattern>  
  </servlet-mapping>   

	<!--Axis2 end -->

<!-- moto -->
<!-- <listener>
<listener-class>xh.org.listeners.MotoTcpClientListenner</listener-class>   
</listener> -->

<!--ucm TCP长连接 -->
<!-- <listener>
 <description> socket 长连接 </description>
 <listener-class>xh.org.listeners.TcpClientListenner</listener-class>
</listener> -->
<!--emh TCP长连接end -->
<!-- <listener>
  <description>sms TCP长连接 </description>
    <listener-class>com.smsnet.SmsTcpListener</listener-class>
 </listener> -->

<!-- ping调度台线程 -->
<!-- <listener>
  <description>ping调度台</description>
  <listener-class>xh.org.listeners.PingDispatchListener</listener-class>
 </listener> -->
 
    <error-page>
    <error-code>404</error-code>
    <location>/Views/404.html</location>
    </error-page>
    <error-page>
    <error-code>500</error-code>
    <location>/Views/500.html</location>
    </error-page>
    
    <!-- 未捕获的错误，同样可指定其它异常类，或自定义异常类 -->
<!-- <error-page>
    <exception-type>java.lang.Exception</exception-type>
    <location>/exception</location>
</error-page> -->
  
 <session-config>
      <session-timeout>86400</session-timeout>
</session-config> 
<!-- <security-constraint> 
<web-resource-collection > 
<web-resource-name >SSL</web-resource-name> 
<url-pattern>/main.html</url-pattern>
    <url-pattern>/map.html</url-pattern>
    <url-pattern>/index.html</url-pattern>
    <url-pattern>/Views/*</url-pattern>
</web-resource-collection> 
<user-data-constraint> 

<transport-guarantee>CONFIDENTIAL</transport-guarantee> 
</user-data-constraint> 
</security-constraint> 
<login-config> 

<auth-method>CLIENT-CERT</auth-method> 
<realm-name>Client Cert Users-only Area</realm-name> 
</login-config> -->
    <filter>
        <filter-name>cros</filter-name>
        <filter-class>xh.org.filter.SimpleCORSFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>cros</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
</web-app>