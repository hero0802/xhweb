<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xh.mybatis.mapper.BsstationMapper">
	<!-- 自定义返回结果集 -->
	<resultMap id="bsInfoMap" type="xh.mybatis.bean.BsstationBean">
		<result property="bsId" column="bsId" javaType="java.lang.Integer"></result>
		<result property="name" column="name" javaType="java.lang.String"></result>
		<result property="type" column="level" javaType="java.lang.Integer"></result>
		<result property="level" column="level" javaType="java.lang.Integer"></result>
		<result property="status" column="status" javaType="java.lang.Integer"></result>
		<result property="lat" column="lat" javaType="java.lang.String"></result>
		<result property="lng" column="lng" javaType="java.lang.String"></result>
		<result property="height" column="height" javaType="java.lang.Float"></result>
		<result property="createTime" column="createTime" javaType="java.lang.String"></result>
	</resultMap>
	<!-- 基站列表 -->
	<select id="bsstatusInfo" parameterType="map" resultType="java.util.HashMap"
		useCache="true">
		select a.*,b.link from xhgmnet_bs_station as a left join view_bsstatus
		as b on a.bsId=b.bsId where 1=1
		<if test="type!=0">
			and a.type=#{type}
		</if>
		<if test="status!=2">
			and a.status=#{status}
		</if>
		<if test="zone!='全部'">
			and a.zone=#{zone}
		</if>
		<if test="link!=2">
			and a.bsId in(select bsId from view_bsstatus where link=#{link})
		</if>
		order by a.bsId asc
	</select>
	<!--查询所有基站 -->
	<select id="allBsInfo" parameterType="map" resultType="java.util.HashMap"
		useCache="true">
		select a.*,b.link from xhgmnet_bs_station as a left join view_bsstatus
		as b on a.bsId=b.bsId where 1=1
		<if test="type!=0">
			and a.type=#{type}
		</if>
		<if test="status!=2">
			and a.status=#{status}
		</if>
		<if test="zone!='全部'">
			and a.zone=#{zone}
		</if>
		<if test="link!=2">
			and a.bsId in(select bsId from view_bsstatus where link=#{link})
		</if>
		order by a.bsId asc
	</select>
	<!--根据基站ID,判断该基站相邻小区是否存在 -->
	<select id="neighborExists" parameterType="map" resultType="int"
		useCache="true">
		select count(*) from xhgmnet_bs_neighbor_cells where bsId=#{bsId} and adjacentCellId=#{adjacentCellId}
	</select>
	<!-- 新增基站相邻小区 -->
	<insert id="addBsNeighbor" keyProperty="id"  useGeneratedKeys="true" parameterType="map">
		insert into xhgmnet_bs_neighbor_cells(bsId,adjacentCellId)values(#{bsId},#(adjacentCellId))		
	</insert>	
	
	<delete id="delBsNeighbor" parameterType="map"></delete>

	<!--根据基站ID，名称查找基站记录 -->
	<select id="bsInfo" parameterType="map"
		resultType="xh.mybatis.bean.BsstationBean" useCache="true">
		select * from xhgmnet_bs_station where 1=1
		<if test="bsId !=null and bsId !='' and bsId !=0">
			and bsId like concat(#{bsId},'%')
		</if>
		<if test="name !=null and name !=''">
			and name like concat(#{name},'%')
		</if>
		order by bsId asc limit #{start},#{limit}
	</select>
	<!--根据基站ID，名称查找基站记录总数 -->
	<select id="bsCount" parameterType="map" resultType="int"
		useCache="true">
		select count(*) from xhgmnet_bs_station where 1=1
		<if test="bsId!=null and bsId!=''">
			and bsId like concat(#{bsId},'%')
		</if>
		<if test="name!=null and name!=''">
			and name like concat(#{name},'%')
		</if>
	</select>

	<!--根据基站ID,查找基站信息 -->
	<select id="selectByBsId" parameterType="int" resultType="int"
		useCache="true">
		select
		count(*) from xhgmnet_bs_station where bsId=#{bsId}
	</select>
	<!--根据基站ID,查找基站相邻小区 -->
	<select id="neighborByBsId" parameterType="int" resultType="map"
		useCache="true">
		select a.*,b.name as bsName from xhgmnet_bs_neighbor_cells as
		a left join
		xhgmnet_bs_station as b on a.adjacentCellId=b.bsId where
		a.bsId=#{bsId}
	</select>
	<!--根据基站ID,查找基站切换参数 -->
	<select id="handoverByBsId" parameterType="int" resultType="map"
		useCache="true">
		select a.*,b.name as bsName from xhgmnet_bs_handover_para as
		a left join
		xhgmnet_bs_station as b on a.bsId=b.bsId where
		a.bsId=#{bsId}
	</select>
	<!--根据基站ID,查找基站BSR配置信息 -->
	<select id="bsrconfigByBsId" parameterType="int" resultType="map"
		useCache="true">
		select a.*,b.name as bsName from xhgmnet_bs_bsr_config as a
		left join
		xhgmnet_bs_station as b on a.bsId=b.bsId where a.bsId=#{bsId}
	</select>
	<!--根据基站ID,查找基站传输配置信息 -->
	<select id="linkconfigByBsId" parameterType="int" resultType="map"
		useCache="true">
		select a.*,b.name as bsName from xhgmnet_bs_link_config as a
		left join
		xhgmnet_bs_station as b on a.bsId=b.bsId where a.bsId=#{bsId}
	</select>
	<!--增加基站 -->
	<insert id="insertBs" keyProperty="bsId"
		parameterType="xh.mybatis.bean.BsstationBean">
		insert into
		xhgmnet_bs_station(bsId, name, period, lat,
		lng, chnumber, number, gpsLineNum,
		power, carrier, carrierName, carrierLink, height, lineHeight,
		lineInstallType,
		address, contact, tel, ip, type, productor, deviceType, level, status,
		hometype, roomCharge, electricCharge, createTime, zone, envMonitor,
		conditionerCount,
		fireEquipment, generatorConfig, isGenerator, entryLimitType, transCount, comment)
		values(#{bsId}, #{name}, #{period}, #{lat}, #{lng}, #{chnumber},
		#{number},
		#{gpsLineNum}, #{power}, #{carrier}, #{carrierName}, #{carrierLink}, #{height},
		#{lineHeight}, #{lineInstallType}, #{address}, #{contact}, #{tel},
		#{ip},
		#{type},#{productor},#{deviceType}, #{level}, #{status}, #{hometype}, #{roomCharge},
		#{electricCharge}, #{createTime}, #{zone}, #{envMonitor}, #{conditionerCount},
		#{fireEquipment},
		#{generatorConfig}, #{isGenerator}, #{entryLimitType}, #{transCount}, #{comment})
	</insert>

	<!--更新基站 -->
	<update id="updateByBsId" parameterType="xh.mybatis.bean.BsstationBean">
		update
		xhgmnet_bs_station set name=#{name}, period=#{period}, lat=#{lat},
		lng=#{lng}, chnumber=#{chnumber}, number=#{number},
		gpsLineNum=#{gpsLineNum}, power=#{power}, carrier=#{carrier},
		carrierName=#{carrierName},
		carrierLink=#{carrierLink}, height=#{height},lineHeight=#{lineHeight},
		lineInstallType=#{lineInstallType},
		address=#{address}, contact=#{contact}, tel=#{tel}, ip=#{ip},
		type=#{type},productor=#{productor},deviceType=#{deviceType},
		level=#{level}, status=#{status},
		hometype=#{hometype}, roomCharge=#{roomCharge},
		electricCharge=#{electricCharge}, createTime=#{createTime}, zone=#{zone}, envMonitor=#{envMonitor},
		conditionerCount=#{conditionerCount}, fireEquipment=#{fireEquipment},
		generatorConfig=#{generatorConfig}, isGenerator=#{isGenerator},
		entryLimitType=#{entryLimitType},
		transCount=#{transCount}, comment=#{comment} where bsId=#{bsId}
	</update>

	<!--删除基站 -->
	<delete id="deleteBsByBsId" parameterType="java.util.List">
		delete from xhgmnet_bs_station where bsId in(
		<foreach collection="list" item="id" separator=",">
			#{id}
		</foreach>
		)
	</delete>

	<!--根据区域信息查询所有基站wlk -->
	<select id="bsByArea" resultType="java.util.HashMap"
		parameterType="java.util.List" useCache="true">
		select a.*,b.link as bsStatus from xhgmnet_bs_station as a left join
		xhgmnet_bsstatus as b on a.bsId=b.bsId where a.zone in (
		<foreach collection="list" item="z" separator=",">
			#{z}
		</foreach>
		) group by a.bsId
	</select>
	<!--根据级别信息查询所有基站wlk -->
	<select id="bsByLevel" resultType="java.util.HashMap" useCache="true">
		select a.*,b.link as bsStatus from xhgmnet_bs_station as a left join
		xhgmnet_bsstatus as b on a.bsId=b.bsId where a.level=#{level} group by
		a.bsId
	</select>
	<!--查询所有 区域信息wlk -->
	<select id="selectAllArea" resultType="java.util.HashMap"
		useCache="true">
		select distinct zone from xhgmnet_bs_station where not isnull(zone) and zone
		!= "" and zone != "null"
	</select>
	<!--查询所有 级别信息wlk -->
	<select id="selectLevel" resultType="java.util.HashMap"
		useCache="true">
		select distinct level from xhgmnet_bs_station where not isnull(zone) order
		by level
	</select>

	<!-- 查询当前断站的基站 -->
	<select id="bsOfflineList" resultType="java.util.HashMap"
		useCache="true">
		select a.bsId,a.status,b.name from xhgmnet_bs_status as a left join
		xhgmnet_bs_station as b
		on a.bsId=b.bsId where a.status=0 order by a.updateTime desc;
	</select>

	<!--查询所有 wlk -->
	<select id="selectAllBsStation" resultType="java.util.HashMap"
		useCache="true">
		select a.*,b.link as bsStatus from xhgmnet_bs_station as a left join
		xhgmnet_bsstatus as b on a.bsId=b.bsId group by a.bsId
	</select>

	<!-- 根据id查询对应基站信息 wlk -->
	<select id="selectBsStationById" resultType="java.util.HashMap"
		useCache="true">
		select a.*,b.link as bsStatus,c.* from xhgmnet_bs_station as a left join
		xhgmnet_bsstatus as b on a.bsId=b.bsId left join
		xhgmnet_bs_channel_info as c
		on a.bsId=c.bsId where a.bsId=#{bsId} group by a.bsId
	</select>

	<!-- 首页话务量及其他业务查询 -->
	<select id="selectCalllistById" parameterType="java.lang.String"
		resultType="java.util.HashMap" useCache="true">
		select name,count(Call_TS_Id) as num,lat,lng,bsId from ${_parameter} as a
		left join xhgmnet_bs_station as b on a.Call_TS_Id=b.bsId group by
		Call_TS_Id
		order by num desc limit 0,5
	</select>

	<!-- 首页排队量及其他业务查询 -->
	<select id="selectChannelById" parameterType="java.lang.String"
		resultType="java.util.HashMap" useCache="true">
		select name,sum(queuedAllocReq) as sum,lat,lng,upload,download,time from
		xhgmnet_bs_channel_info as a
		left join xhgmnet_bs_station as b on a.bsId=b.bsId where a.bsId=#{bsId}
	</select>

	<!-- 首页路测数据查询 -->
	<select id="selectRoadTest" resultType="java.util.HashMap"
		useCache="true">
		select * from xhgmnet_road_test01
	</select>

	<!--区域圈选查询 -->
	<select id="rectangle" parameterType="map"
		resultType="xh.mybatis.bean.BsstationBean" useCache="true">
		select * from
		xhgmnet_bs_station where lng between #{smallLng} and #{bigLng} and lat
		between #{smallLat} and #{bigLat}
		order by bsId asc limit #{start},#{limit}
	</select>
	<!--区域圈选总数 -->
	<select id="rectangleCount" parameterType="map" resultType="int"
		useCache="true">
		select count(*) from xhgmnet_bs_station where lng between
		#{smallLng} and #{bigLng} and lat between #{smallLat} and #{bigLat}
	</select>

</mapper>
