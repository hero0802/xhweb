<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xh.mybatis.mapper.BsstationMapper">

	
	<!-- 基站列表 -->
	<select id="bsstatusInfo" parameterType="map" resultType="java.util.HashMap"
		useCache="true">
		select a.*,b.link from xhgmnet_bs_station as a left join view_bsstatus
		as b on a.bsId=b.bsId where 1=1
		<if test="type!=0">
			and a.type=#{type}
		</if>
		<if test="status!=2">
			and a.status=#{status}
		</if>
		<if test="zone!='全部'">
			and a.zone=#{zone}
		</if>
		<if test="link!=2">
			and a.bsId in(select bsId from view_bsstatus where
			link=#{link})
		</if>
		order by a.bsId asc
	</select>
	<!-- 筛选重要基站 -->

	<select id="search_more_bs" parameterType="map" resultType="java.util.HashMap"
		useCache="true">
		select bsId,name from xhgmnet_bs_station where 1=1
		<if test="zone!='全部'">
			and zone=#{zone}
		</if>
		<if test="str!=null or str!=''">
			and (bsId like concat(#{str},'%') or name like
			concat('%',#{str},'%'))
		</if>
		order by bsId asc
	</select>

	<select id="search_bs_by_regGroup" parameterType="int"
		resultType="java.util.HashMap" useCache="true">
		select a.bsId,a.gourpId,b.name
		from xhgmnet_bs_groupstatus as a
		left join xhgmnet_bs_station as b on
		a.bsId=b.bsId
		where gourpId=#{groupId}
	</select>
	<select id="search_regUser_by_regGroup" parameterType="int"
		resultType="java.util.HashMap" useCache="true">
		select
		a.bsId,a.userId,a.TGid,b.E_name as name from
		xhgmnet_operations_userstatus as a
		left join xhgmnet_radiouser as b on
		a.userId=b.C_ID
		where TGid=#{groupId}
	</select>

	<select id="bsInfolimit" resultType="map" useCache="true">
		select
		a.bsId,a.name,b.bsIds from xhgmnet_bs_station as a
		left join
		xhgmnet_stationalarm as b on a.bsId=b.bsIds
		order by a.bsId asc
	</select>
	<!-- 基站总数 -->
	<select id="bsTotal" useCache="true" resultType="int">
		select count(*)
		from xhgmnet_bs_station
	</select>
	<!--基站断站列表 -->
	<select id="monitorBsofflineList" resultType="map" useCache="true">
		<!-- select a.bsId,a.time,b.name,b.lat,b.lng,b.period from view_bsstatus 
			as a right join xhgmnet_bs_station as b on a.bsId=b.bsId where a.link=1 order 
			by a.time desc -->

		select a.bsId,a.name,a.lat,a.lng,a.period,b.time from
		xhgmnet_bs_station as a
		left join view_bsstatus as b on a.bsId=b.bsId
		where a.status=1 and b.link!=0 order by b.time desc

	</select>
	<!--基站限制列表 -->
	<select id="bslimitList" parameterType="map" resultType="map"
		useCache="true">
		select a.bsIds,b.name from xhgmnet_stationalarm as a
		left join
		xhgmnet_bs_station as b on a.bsIds=b.bsId limit #{start},#{limit}
	</select>
	<!--基站限制列表是否存在 -->
	<select id="bslimitExistis" parameterType="int" resultType="int"
		useCache="true">
		select count(*) from xhgmnet_stationalarm where bsIds=${bsId}
	</select>
	<!--基站限制列表总数 -->
	<select id="bslimitListCount" resultType="int" useCache="true">
		select
		count(*) from xhgmnet_stationalarm
	</select>

	<!-- 新增限制列表 -->
	<insert id="addBsLimit" keyProperty="bsIds" parameterType="java.util.List">


		insert IGNORE into xhgmnet_stationalarm (bsIds) values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item})
		</foreach>

	</insert>
	<!-- 删除限制列表 -->
	<delete id="deleteBsLimit" parameterType="java.util.List">
		TRUNCATE TABLE `xhgmnet_stationalarm`;
		<!-- delete from xhgmnet_stationalarm where bsIds in <foreach collection="list" 
			item="id" open="(" separator="," close=")"> #{id} </foreach> -->
	</delete>
	<!--查询所有基站 -->
	<select id="allBsInfo" parameterType="map" resultType="java.util.HashMap"
		useCache="true">
		select
		a.bsId,a.name,a.status,a.type,a.level,a.period,a.zone,a.comment,b.link,c.userSum,e.groupSum,d.deviceAlarmSum
		from xhgmnet_bs_station as a
		left join view_bsstatus as b on
		a.bsId=b.bsId
		left join (select count(distinct userId) as userSum ,bsId
		from xhgmnet_operations_userstatus where regStatus in(1,2,3)
		<if test="vpnId!=null and vpnId!=''">
			and userId in (select C_ID from xhgmnet.xhgmnet_radiouser
			where
			E_vpnId=#{vpnId})
		</if>
		group by bsId )
		as c on a.bsId=c.bsId

		left join (select count(gourpId)
		as groupSum ,bsId from
		xhgmnet_bs_groupstatus
		<if test="vpnId!=null and vpnId!=''">
			where gourpId in (select TalkgroupID from
			xhgmnet.xhgmnet_talkgroup where
			E_vpnId=#{vpnId})
			or gourpId in (select
			C_MultigroupID from xhgmnet.xhgmnet_multigroup
			where E_vpnId=#{vpnId})
		</if>
		group by bsId)
		as e on a.bsId=e.bsId
		<!-- left join (select count(distinct TGid) as groupSum ,bsId from xhgmnet_operations_userstatus 
			where TGid!=0 group by bsId) as e on a.bsId=e.bsId -->
		left join (select bsId,sum(alarmSum) as deviceAlarmSum from (
		select
		bsId, count(working) as alarmSum from xhgmnet_bs_bsc where working>0
		and working!=255 group by bsId
		union all
		select a.bsId,count(a.bsrId) as
		alarmSum from xhgmnet_bs_bsr_config as a
		left join xhgmnet_bs_bsr as b
		on a.bsId=b.bsId and a.bsrId=b.Id
		where a.bsrIsEnable =1 and
		b.working>0 and b.working !=255 group by a.bsId

		union all
		select bsId,
		count(working) as alarmSum from xhgmnet_bs_dpx
		where (working>0 and
		working!=255) or (retLoss>0 and retLoss &lt;=140)
		group by bsId

		union
		all
		select bsId, count(working) as alarmSum from xhgmnet_bs_psm
		where
		(bdTmp1>0 or bdTmp2>0 or bdTmp3>0) and(
		dc12=1 or dc301=1 or dc302=1 or
		runStatus=1 or tempStatus=1 or linkStatus=1
		or ad!=2) group by bsId
		) as
		temp group by bsId) as d on a.bsId=d.bsId

		where 1=1
		<if test="size==0">

			<if test="usergroup==null or usergroup==''">
				<if test="type!=0">
					and a.level=#{type}
				</if>
				<if test="status!=2">
					and a.status=#{status}
				</if>
				<if test="zone!='全部'">
					and a.zone=#{zone}
				</if>
				<if test="link!=2">
					and a.bsId in(select bsId from view_bsstatus where
					link=#{link})
				</if>
			</if>
			<if test="usergroup!=null and usergroup!=''">
				and a.bsId in (select bsId from
				xhgmnet_operations_userstatus where
				userId=${usergroup} or
				TGid=${usergroup})
			</if>

		</if>

		<if test="size>0">
			and a.bsId in (
			<foreach collection="bslist" item="id" separator=",">
				#{id}
			</foreach>
			)
		</if>

		order by a.bsId asc
	</select>
	<!--查询所有基站 -->
	<select id="bs_business_info" parameterType="map" resultType="java.util.HashMap"
		useCache="true">
		select
		a.bsId,a.name,a.status,a.type,a.level,a.period,a.zone,b.link,c.userSum,e.groupSum,d.deviceAlarmSum,
		FORMAT(f.avgControlChanUpRate/100,2) as avgControlChanUpRate,
		FORMAT(f.avgControlChanDownRate/100,2) as avgControlChanDownRate,
		g.loadInfo
		from xhgmnet_bs_station as a
		left join
		xhgmnet_gps_voice.pef_newbstotal_now as f on a.bsId=f.bsid

		left join xhgmnet_moto_site_channel_info as g on a.bsId=(g.siteId+2000)


		left join view_bsstatus as b on
		a.bsId=b.bsId
		left join (select
		count(distinct userId) as userSum ,bsId
		from
		xhgmnet_operations_userstatus where regStatus in(1,2,3)
		<if test="vpnId!=null and vpnId!=''">
			and userId in (select C_ID from xhgmnet.xhgmnet_radiouser
			where
			E_vpnId=#{vpnId})
		</if>
		group by bsId )
		as c on a.bsId=c.bsId

		left join (select count(gourpId)
		as groupSum ,bsId from
		xhgmnet_bs_groupstatus
		<if test="vpnId!=null and vpnId!=''">
			where gourpId in (select TalkgroupID from
			xhgmnet.xhgmnet_talkgroup where
			E_vpnId=#{vpnId})
			or gourpId in (select
			C_MultigroupID from xhgmnet.xhgmnet_multigroup
			where E_vpnId=#{vpnId})
		</if>
		group by bsId)
		as e on a.bsId=e.bsId
		<!-- left join (select count(distinct TGid) as groupSum ,bsId from xhgmnet_operations_userstatus 
			where TGid!=0 group by bsId) as e on a.bsId=e.bsId -->
		left join (select bsId,sum(alarmSum) as deviceAlarmSum from (
		select
		bsId, count(working) as alarmSum from xhgmnet_bs_bsc where working>0
		and working!=255 group by bsId
		union all
		select a.bsId,count(a.bsrId) as
		alarmSum from xhgmnet_bs_bsr_config as a
		left join xhgmnet_bs_bsr as b
		on a.bsId=b.bsId and a.bsrId=b.Id
		where a.bsrIsEnable =1 and
		b.working>0 and b.working !=255 group by a.bsId

		union all
		select bsId,
		count(working) as alarmSum from xhgmnet_bs_dpx
		where (working>0 and
		working!=255) or (retLoss>0 and retLoss &lt;=140)
		group by bsId

		union
		all
		select bsId, count(working) as alarmSum from xhgmnet_bs_psm
		where
		(bdTmp1>0 or bdTmp2>0 or bdTmp3>0) and(
		dc12=1 or dc301=1 or dc302=1 or
		runStatus=1 or tempStatus=1 or linkStatus=1
		or ad!=2) group by bsId
		) as
		temp group by bsId) as d on a.bsId=d.bsId

		where 1=1
		<if test="size==0">

			<if test="zone!='全部'">
				and a.zone=#{zone}
			</if>

		</if>

		<if test="size>0">
			and a.bsId in (
			<foreach collection="bslist" item="id" separator=",">
				#{id}
			</foreach>
			)
		</if>

		<if test="sort_field!=''">
			<if test="sort_field=='userSum'">
				order by c.${sort_field} ${sort_type}
			</if>
			<if test="sort_field=='groupSum'">
				order by e.${sort_field} ${sort_type}
			</if>
			<if test="sort_field=='bsId'">
				order by a.${sort_field} ${sort_type}
			</if>

		</if>
		<if test="sort_field==''">
			order by a.bsId asc
		</if>

		limit #{start},#{limit}
	</select>
	<select id="bs_business_info_count" parameterType="map"
		resultType="int" useCache="true">
		select count(*) from xhgmnet_bs_station where 1=1
		<if test="size==0">

			<if test="zone!='全部'">
				and zone=#{zone}
			</if>

		</if>

		<if test="size>0">
			and bsId in (
			<foreach collection="bslist" item="id" separator=",">
				#{id}
			</foreach>
			)
		</if>
	</select>
	<!--根据基站ID,判断该基站相邻小区是否存在 -->
	<select id="neighborExists" parameterType="map" resultType="int"
		useCache="true">
		select count(*) from xhgmnet_bs_neighbor_cells where
		bsId=#{bsId} and adjacentCellId=#{adjacentCellId}
	</select>
	<!-- 新增基站切换参数 -->
	<insert id="addBsHandover" keyProperty="id" useGeneratedKeys="true"
		parameterType="map">
		insert into
		xhgmnet_bs_handover_para(bsId,minVol,slowReelectThreshold,fastReelectThreshold,slowReelectDelay,fastReelectDelay)
		values(#{bsId},#{minVol},#{slowReelectThreshold},#{fastReelectThreshold},#{slowReelectDelay},#{fastReelectDelay})
	</insert>
	<!-- 修改基站切换参数 -->
	<update id="updateBsHandover" parameterType="map">
		update
		xhgmnet_bs_handover_para set
		minVol=#{minVol},slowReelectThreshold=#{slowReelectThreshold},
		fastReelectThreshold=#{fastReelectThreshold},slowReelectDelay=#{slowReelectDelay},fastReelectDelay=#{fastReelectDelay}
		where bsId=#{bsId}
	</update>
	<!-- 新增基站相邻小区 -->
	<insert id="addBsNeighbor" keyProperty="id" useGeneratedKeys="true"
		parameterType="map">
		insert into
		xhgmnet_bs_neighbor_cells(bsId,adjacentCellId)values(#{bsId},#{adjacentCellId})
	</insert>
	<!-- 删除基站相邻小区 -->
	<delete id="delBsNeighbor" parameterType="map">
		delete from
		xhgmnet_bs_neighbor_cells where bsId=#{bsId} and
		adjacentCellId=#{adjacentCellId}
	</delete>
	<!--根据基站ID,调单好判断该基站传输是否存在 -->
	<select id="linkconfigExists" parameterType="map" resultType="int"
		useCache="true">
		select count(*) from xhgmnet_bs_link_config where
		bsId=#{bsId} and regulation_number=#{regulation_number}
	</select>
	<!-- 新增基站传输 -->
	<insert id="addLinkconfig" keyProperty="id" useGeneratedKeys="true"
		parameterType="xh.mybatis.bean.bsLinkConfigBean">
		INSERT INTO xhgmnet_bs_link_config (
		bsId,
		tag,
		is_open,
		operator,
		equipment_model,
		bs_net,
		bs_net_port,
		msc_net,
		msc_net_port,
		regulation_number,
		masterIp,
		cameraIp) VALUES
		(
		#{bsId},
		#{tag},
		#{is_open},
		#{operator},
		#{equipment_model},
		#{bs_net},
		#{bs_net_port},
		#{msc_net},
		#{msc_net_port},
		#{regulation_number},
		#{masterIp},
		#{cameraIp})
	</insert>
	<!-- 删除基站传输 -->
	<delete id="delLinkconfig" parameterType="int">
		delete from
		xhgmnet_bs_link_config where id=#{id}
	</delete>
	<!--根据基站ID,bscId,bsrId判断该基站bsr是否存在 -->
	<select id="bsrconfigExists" parameterType="map" resultType="int"
		useCache="true">
		select count(*) from xhgmnet_bs_bsr_config where bsId=#{bsId}
		and bsrId=#{bsrId}
	</select>

	<!--根据基站ID,bscId判断该基站bsc是否存在 -->
	<select id="bscconfigExists" parameterType="map" resultType="int"
		useCache="true">
		select count(*) from xhgmnet_bs_bsc_config where bsId=#{bsId}
		and bscId=#{bscId}
	</select>
	<!-- 新增基站bsr -->
	<insert id="addBsrconfig" keyProperty="id" useGeneratedKeys="true"
		parameterType="xh.mybatis.bean.bsrConfigBean">
		INSERT INTO xhgmnet_bs_bsr_config (bsId,bsrId,
		bsrIsEnable, poweOne, poweTwo, freqOne,
		freqTwo)values(#{bsId},#{bsrId}, #{bsrIsEnable},
		#{poweOne},#{poweTwo}, #{freqOne}, #{freqTwo})
	</insert>
	<!-- 新增基站bsc -->
	<insert id="addBscconfig" keyProperty="id" useGeneratedKeys="true"
		parameterType="xh.mybatis.bean.bscConfigBean">
		INSERT INTO xhgmnet_bs_bsc_config (bsId,bscId,
		bscVersion, bscIp, bscIsEnable, bscComment)values(#{bsId},#{bscId},
		#{bscVersion}, #{bscIp}, #{bscIsEnable}, #{bscComment})
	</insert>
	<!-- 删除基站bsr -->
	<delete id="delBsrconfig" parameterType="int">
		delete from
		xhgmnet_bs_bsr_config where id=#{id}
	</delete>
	<!-- 删除基站bsc -->
	<delete id="delBscconfig" parameterType="int">
		delete from
		xhgmnet_bs_bsc_config where id=#{id}
	</delete>
	<!--根据基站ID，名称查找基站记录 -->
	<select id="bsInfo" parameterType="map"
		resultType="xh.mybatis.bean.BsstationBean" useCache="true">
		select a.*,b.*,c.* from xhgmnet_bs_station as a
		left join
		xhgmnet_bs_machine_room as b on a.bsId=b.bsId
		left join
		xhgmnet_bs_supply_electricity as c on c.bsId=b.bsId
		where 1=1
		<if test="bsId!=null and bsId!=''">
			and a.bsId like concat(#{bsId},'%')
		</if>
		<if test="name !=null and name !=''">
			and a.name like concat(#{name},'%')
		</if>
		<if test="type!=-1">
			and a.type=#{type}
		</if>
		<if test="level!=-1">
			and a.level=#{level}
		</if>
		<if test="zone !=null and zone !='' and zone!='null'">
			and a.zone=#{zone}
		</if>
		order by a.bsId asc limit #{start},#{limit}
	</select>
	<!--根据基站ID，名称查找基站记录总数 -->
	<select id="bsCount" parameterType="map" resultType="int"
		useCache="true">
		select count(*) from xhgmnet_bs_station where 1=1
		<if test="bsId!=null and bsId!=''">
			and bsId like concat(#{bsId},'%')
		</if>
		<if test="name!=null and name!=''">
			and name like concat(#{name},'%')
		</if>
		<if test="type!=-1">
			and type=#{type}
		</if>
		<if test="level!=-1">
			and level=#{level}
		</if>
		<if test="zone !=null and zone !='' and zone!='null'">
			and zone=#{zone}
		</if>
	</select>

	<!--根据基站ID,查找基站信息 -->
	<select id="selectByBsId" parameterType="String" resultType="int"
		useCache="true">
		select
		count(*) from xhgmnet_bs_station where bsId=#{bsId}
	</select>
	<!--根据基站ID,查找基站相邻小区 -->
	<select id="neighborByBsId" parameterType="int" resultType="map"
		useCache="true">
		select a.*,b.name as bsName from xhgmnet_bs_neighbor_cells as
		a left join
		xhgmnet_bs_station as b on a.adjacentCellId=b.bsId where
		a.bsId=#{bsId} order by a.adjacentCellId asc
	</select>
	<!--根据基站ID,查找基站切换参数 -->
	<select id="handoverByBsId" parameterType="int" resultType="map"
		useCache="true">
		select a.*,b.name as bsName from xhgmnet_bs_handover_para as
		a left join
		xhgmnet_bs_station as b on a.bsId=b.bsId where
		a.bsId=#{bsId}
	</select>
	<!--根据基站ID,查找基站BSR配置信息 -->
	<select id="bsrconfigByBsId" parameterType="int" resultType="map"
		useCache="true">
		select a.*,b.name as bsName from xhgmnet_bs_bsr_config as a
		left join
		xhgmnet_bs_station as b on a.bsId=b.bsId where a.bsId=#{bsId}
		order by a.bsrId asc
	</select>
	<!--根据基站ID,查找基站BSC配置信息 -->
	<select id="bscconfigByBsId" parameterType="int" resultType="map"
		useCache="true">
		select a.*,b.name as bsName from xhgmnet_bs_bsc_config as a
		left join
		xhgmnet_bs_station as b on a.bsId=b.bsId where a.bsId=#{bsId}
		order by a.bscId asc
	</select>
	<!--根据基站ID,查找基站传输配置信息 -->
	<select id="linkconfigByBsId" parameterType="int" resultType="map"
		useCache="true">
		select a.*,b.name as bsName from xhgmnet_bs_link_config as a
		left join
		xhgmnet_bs_station as b on a.bsId=b.bsId where a.bsId=#{bsId}
	</select>
	<select id="excel_bs_info" parameterType="map"
		resultType="xh.mybatis.bean.ExcelBsInfoBean" useCache="true">
		SELECT
		a.*, b.*,
		c.*,
		d.is_open AS is_open,
		d.operator AS operator,
		d.equipment_model AS equipment_model1,
		d.bs_net AS bs_net,
		d.bs_net_port AS bs_net_port,
		d.msc_net AS msc_net,
		d.msc_net_port AS msc_net_port,
		d.regulation_number AS regulation_number,
		e.is_open AS is_open1,
		e.operator AS operator1,
		e.equipment_model AS
		equipment_model2,
		e.bs_net AS bs_net1,
		e.bs_net_port AS bs_net_port1,
		e.msc_net AS msc_net1,
		e.msc_net_port AS msc_net_port1,
		e.regulation_number AS regulation_number1,
		f.freqOne AS freg1,
		f.freqTwo AS freg2,
		g.freqOne AS freg3,
		g.freqTwo AS freg4,
		h.freqOne AS
		freg5,
		h.freqTwo AS freg6,
		i.freqOne AS freg7,
		i.freqTwo AS freg8
		FROM
		xhgmnet_bs_station AS a
		LEFT JOIN xhgmnet_bs_machine_room AS b ON
		a.bsId = b.bsId
		LEFT JOIN xhgmnet_bs_supply_electricity AS c ON a.bsId
		= c.bsId
		LEFT JOIN xhgmnet_bs_link_config AS d ON a.bsId = d.bsId
		AND
		d.tag = 1
		LEFT JOIN xhgmnet_bs_link_config AS e ON a.bsId = e.bsId
		AND
		e.tag = 2
		LEFT JOIN xhgmnet_bs_bsr_config AS f ON a.bsId = f.bsId
		AND
		f.bsrId = 1
		LEFT JOIN xhgmnet_bs_bsr_config AS g ON a.bsId = g.bsId
		AND
		g.bsrId = 2
		LEFT JOIN xhgmnet_bs_bsr_config AS h ON a.bsId = h.bsId
		AND
		h.bsrId = 3
		LEFT JOIN xhgmnet_bs_bsr_config AS i ON a.bsId = i.bsId
		AND
		i.bsrId = 4
		where a.type!=2
		<if test="period!=0">
		and a.period=#{period}
		</if>
		ORDER BY
		a.bsId ASC
	</select>

	<!--增加基站 -->
	<insert id="insertBs" keyProperty="bsId"
		parameterType="xh.mybatis.bean.BsstationBean">
		insert into
		xhgmnet_bs_station(bsId,name,period,lat,lng,chnumber,number,gpsLineNum,power,carrier,carrierName,carrierLink,
		height,line_model,line_dbi,lineHeight,lineInstallType,address,contact,tel,ip,type,productor,
		deviceType,level,status,hometype,equipment_model,electricCharge,area,zone,envMonitor,
		conditionerCount,fireEquipment,generatorConfig,isGenerator,entryLimitType,
		transCount,comment,weather,disasterPoint,stolenPoint,powerCut,residentialBuilding,
		highMagnetic,exist,appUser,cabinet_type,transfer_type,transfer_open_model,is_same_address,
		is_same_carrieroperator,is_same_net)
		values(#{bsId},#{name},#{period},#{lat},#{lng},#{chnumber},#{number},#{gpsLineNum},#{power},
		#{carrier},#{carrierName},#{carrierLink},#{height},#{line_model},#{line_dbi},#{lineHeight},
		#{lineInstallType},#{address},#{contact},#{tel},#{ip},#{type},#{productor},#{deviceType},
		#{level},#{status},#{hometype},#{equipment_model},#{electricCharge},#{area},#{zone},#{envMonitor},
		#{conditionerCount},#{fire},#{generatorConfig},#{isGenerator},#{entryLimitType},
		#{transCount},#{comment},#{weather},#{disasterPoint},#{stolenPoint},#{powerCut},#{residentialBuilding},
		#{highMagnetic},#{exist},#{appUser},#{cabinet_type},#{transfer_type},#{transfer_open_model},#{is_same_address},
		#{is_same_carrieroperator},#{is_same_net})
	</insert>
	<insert id="insert_bs_machine_room" keyProperty="bsId"
		parameterType="xh.mybatis.bean.BsMachineRoomBean">
		insert into
		xhgmnet_bs_machine_room(bsId,door,camera,humiture,smoke,ups_z,ups_j,water,fire,fire_info,air_conditioning,
		air_conditioning_info,lightning,emh_on_off,emh_on_off_info)
		values(#{bsId},#{door},#{camera},#{humiture},#{smoke},#{ups_z},#{ups_j},#{water},#{fire},#{fire_info},
		#{air_conditioning},#{air_conditioning_info},#{lightning},#{emh_on_off},#{emh_on_off_info})
	</insert>
	<insert id="insert_bs_supply_electricity" keyProperty="bsId"
		parameterType="xh.mybatis.bean.BsElectricityBean">
		insert into
		xhgmnet_bs_supply_electricity(bsId,bs_supply_electricity_type,bs_power_down_type,
		transfer_supply_electricity_type,transfer_power_down_type,emh_supply_electricity_type,emh_power_down_type,
		has_spare_power,spare_power_info,bs_xh_require_time,bs_xh_fact_time,transfer_require_time,transfer_fact_time,
		emh_require_time,emh_fact_time,generation_to_bs_date,is_allow_generation,generation_date,to_bs_date,
		generatorConfig,not_config_generator,rectification_measures,is_require,not_require_reason,rectification_measures2)
		values(#{bsId},#{bs_supply_electricity_type},#{bs_power_down_type},
		#{transfer_supply_electricity_type},#{transfer_power_down_type},#{emh_supply_electricity_type},
		#{emh_power_down_type},#{has_spare_power},#{spare_power_info},#{bs_xh_require_time},
		#{bs_xh_fact_time},#{transfer_require_time},#{transfer_fact_time},#{emh_require_time},
		#{emh_fact_time},#{generation_to_bs_date},#{is_allow_generation},#{generation_date},#{to_bs_date},
		#{generatorConfig},#{not_config_generator},#{rectification_measures},#{is_require},#{not_require_reason},
		#{rectification_measures2})
	</insert>

	<!--更新基站 -->
	<update id="updateByBsId" parameterType="xh.mybatis.bean.BsstationBean">
		update
		xhgmnet_bs_station set
		name=#{name},period=#{period},lat=#{lat},lng=#{lng},chnumber=#{chnumber},number=#{number},gpsLineNum=#{gpsLineNum},
		power=#{power},carrier=#{carrier},carrierName=#{carrierName},carrierLink=#{carrierLink},height=#{height},
		line_model=#{line_model},line_dbi=#{line_dbi},lineHeight=#{lineHeight},
		lineInstallType=#{lineInstallType},address=#{address},contact=#{contact},tel=#{tel},ip=#{ip},type=#{type},
		productor=#{productor},deviceType=#{deviceType},
		level=#{level},status=#{status},hometype=#{hometype},
		equipment_model=#{equipment_model},electricCharge=#{electricCharge},area=#{area},zone=#{zone},envMonitor=#{envMonitor},
		conditionerCount=#{conditionerCount},fireEquipment=#{fire},generatorConfig=#{generatorConfig},
		isGenerator=#{isGenerator},transCount=#{entryLimitType},
		transCount=#{transCount},comment=#{comment},weather=#{weather},disasterPoint=#{disasterPoint},stolenPoint=#{stolenPoint},
		powerCut=#{powerCut},residentialBuilding=#{residentialBuilding},
		highMagnetic=#{highMagnetic},exist=#{exist},appUser=#{appUser},cabinet_type=#{cabinet_type},
		transfer_type=#{transfer_type},transfer_open_model=#{transfer_open_model},is_same_address=#{is_same_address},
		is_same_carrieroperator=#{is_same_carrieroperator},is_same_net=#{is_same_net}
		where bsId=#{bsId}
	</update>

	<update id="update_bs_machine_room" parameterType="xh.mybatis.bean.BsMachineRoomBean">
		update
		xhgmnet_bs_machine_room set
		door=#{door},camera=#{camera},humiture=#{humiture},smoke=#{smoke},ups_z=#{ups_z},ups_j=#{ups_j},
		water=#{water},fire=#{fire},fire_info=#{fire_info},
		air_conditioning=#{air_conditioning},air_conditioning_info=#{air_conditioning_info},
		lightning=#{lightning},emh_on_off=#{emh_on_off},emh_on_off_info=#{emh_on_off_info}
		where bsId=#{bsId}
	</update>

	<update id="update_bs_supply_electricity" parameterType="xh.mybatis.bean.BsElectricityBean">
		update
		xhgmnet_bs_supply_electricity set
		bs_supply_electricity_type=#{bs_supply_electricity_type},bs_power_down_type=#{bs_power_down_type},
		transfer_supply_electricity_type=#{transfer_supply_electricity_type},transfer_power_down_type=#{transfer_power_down_type},
		emh_supply_electricity_type=#{emh_supply_electricity_type},
		emh_power_down_type=#{emh_power_down_type},has_spare_power=#{has_spare_power},spare_power_info=#{spare_power_info},
		bs_xh_require_time=#{bs_xh_require_time},
		bs_xh_fact_time=#{bs_xh_fact_time},
		transfer_require_time=#{transfer_require_time},transfer_fact_time=#{transfer_fact_time},
		emh_require_time=#{emh_require_time},emh_fact_time=#{emh_fact_time},
		generation_to_bs_date=#{generation_to_bs_date},is_allow_generation=#{is_allow_generation},
		generation_date=#{generation_date},to_bs_date=#{to_bs_date},
		generatorConfig=#{generatorConfig},not_config_generator=#{not_config_generator},
		rectification_measures=#{rectification_measures},is_require=#{is_require},not_require_reason=#{not_require_reason},
		rectification_measures2=#{rectification_measures2}
		where bsId=#{bsId}
	</update>

	<!--删除基站 -->
	<delete id="deleteBsByBsId" parameterType="java.util.List">
		delete from xhgmnet_bs_station where bsId in(
		<foreach collection="list" item="id" separator=",">
			#{id}
		</foreach>
		)
	</delete>
	<delete id="delete_bs_machine_room" parameterType="java.util.List">
		delete from xhgmnet_bs_machine_room where bsId in(
		<foreach collection="list" item="id" separator=",">
			#{id}
		</foreach>
		)
	</delete>
	<delete id="delete_bs_supply_electricity" parameterType="java.util.List">
		delete from xhgmnet_bs_supply_electricity where bsId in(
		<foreach collection="list" item="id" separator=",">
			#{id}
		</foreach>
		)
	</delete>

	<!--根据区域信息查询所有基站wlk -->
	<select id="bsByArea" resultType="java.util.HashMap"
		parameterType="java.util.List" useCache="true">
		select a.*,b.link as bsStatus from xhgmnet_bs_station as a left join
		xhgmnet_bsstatus as b on a.bsId=b.bsId where a.zone in (
		<foreach collection="list" item="z" separator=",">
			#{z}
		</foreach>
		) group by a.bsId
	</select>
	<!--根据级别信息查询所有基站wlk -->
	<select id="bsByLevel" resultType="java.util.HashMap" useCache="true">
		select a.*,b.link as bsStatus from xhgmnet_bs_station as a left join
		xhgmnet_bsstatus as b on a.bsId=b.bsId where a.level=#{level} group by
		a.bsId
	</select>
	<!--查询所有 区域信息wlk -->
	<select id="selectAllArea" resultType="java.util.HashMap"
		useCache="true">
		select distinct zone from xhgmnet_bs_station where not
		isnull(zone) and zone
		!= "" and zone != "null"
	</select>
	<!--查询所有 级别信息wlk -->
	<select id="selectLevel" resultType="java.util.HashMap"
		useCache="true">
		select distinct level from xhgmnet_bs_station where not
		isnull(zone) order
		by level
	</select>

	<!-- 查询当前断站的基站 -->
	<select id="bsOfflineList" resultType="java.util.HashMap"
		useCache="true">
		select a.bsId,a.status,b.name from xhgmnet_bs_status as a
		left join
		xhgmnet_bs_station as b
		on a.bsId=b.bsId where a.status=0
		order by a.updateTime desc;
	</select>

	<!--查询所有 wlk -->
	<select id="selectAllBsStation" resultType="java.util.HashMap"
		useCache="true">
		select a.*,b.link as bsStatus from xhgmnet_bs_station as a
		left join
		xhgmnet_bsstatus as b on a.bsId=b.bsId group by a.bsId
	</select>

	<!-- 根据id查询对应基站信息 wlk -->
	<select id="selectBsStationById" resultType="java.util.HashMap"
		useCache="true">
		select a.*,b.link as bsStatus,c.* from xhgmnet_bs_station as
		a left join
		xhgmnet_bsstatus as b on a.bsId=b.bsId left join
		xhgmnet_bs_channel_info as c
		on a.bsId=c.bsId where a.bsId=#{bsId}
		group by a.bsId
	</select>

	<!-- 首页话务量及其他业务查询 -->
	<select id="selectCalllistById" parameterType="java.lang.String"
		resultType="java.util.HashMap" useCache="true">
		select name,count(Call_TS_Id)
		as num,lat,lng,bsId from ${_parameter} as a
		left join
		xhgmnet_bs_station as b on a.Call_TS_Id=b.bsId group by
		Call_TS_Id
		order by num desc limit 0,5
	</select>

	<!-- 首页排队量及其他业务查询 -->
	<select id="selectChannelById" parameterType="java.lang.String"
		resultType="java.util.HashMap" useCache="true">
		select
		name,sum(queuedAllocReq) as sum,lat,lng,upload,download,time from
		xhgmnet_bs_channel_info as a
		left join xhgmnet_bs_station as b on
		a.bsId=b.bsId where a.bsId=#{bsId}
	</select>

	<!-- 首页路测数据查询 -->
	<select id="selectRoadTest" resultType="java.util.HashMap"
		useCache="true">
		select * from xhgmnet_road_test01
	</select>

	<!--区域圈选查询 -->
	<select id="rectangle" parameterType="map" resultType="java.util.HashMap"
		useCache="true">
		select a.*,b.link as bsStatus from xhgmnet_bs_station as a left join
		xhgmnet_bsstatus as b on a.bsId=b.bsId where a.bsId in
		<foreach item="item" index="index" collection="groupData"
			open="(" separator="," close=")">
			#{item}
		</foreach>
		group by a.bsId order by bsId asc limit #{start},#{limit}
	</select>
	<!--区域圈选总数 -->
	<select id="rectangleCount" parameterType="map" resultType="int"
		useCache="true">
		select count(*) from xhgmnet_bs_station where bsId in
		<foreach item="item" index="index" collection="groupData"
			open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>
	<select id="select_bs_by_bsid" parameterType="int" resultType="map"
		useCache="true">
		select * from xhgmnet_bs_station where bsId=#{bsId}

	</select>
	<select id="select_bs_by_type" parameterType="int" resultType="int"
		useCache="true">
		select count(*) from xhgmnet_bs_station where type=#{type}

	</select>

</mapper>
