<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xh.mybatis.mapper.TcpMapper">
	<!-- 查询当月已巡基站信息 -->
	<select id="selectInspectionBsList" parameterType="int" resultType="map">
		select bsId  bsid,name bsname,lat latitude,lng longitude,address from xhgmnet_bs_station where bsId in (select bsid from xhgmnet_operations_inspection_selfbs where DATE_FORMAT(commitdate,'%c') =#{month} GROUP BY bsid)
	</select>

	<!-- 查询当月未巡基站信息 -->
	<select id="selectNotInspectionBsList" parameterType="int" resultType="map">
		select bsId  bsid,name bsname,lat latitude,lng longitude,address from xhgmnet_bs_station where bsId  not in (select bsid from xhgmnet_operations_inspection_selfbs where DATE_FORMAT(commitdate,'%c') =#{month} GROUP BY bsid) and lat !=''
	</select>

	<!-- 查询当前所有断站 -->
	<select id="selectBreakBsInfo" parameterType="String"  resultType="map">
		select b.bsId  bsid,b.name bsname,lat latitude,lng longitude,address from (select * from view_bsstatus where link!=0 and bsId in (select bsId from xhgmnet_bs_station where status=1)) as a LEFT JOIN xhgmnet_bs_station as b on a.bsId=b.bsId
	</select>

	<!-- 根据基站id查询移动基站最近十二条巡检 -->
	<!--<select id="selectInspectListForMoveBs" parameterType="String" resultType="map">
		select * from xhgmnet_operations_inspection_movebs where bsid=#{bsId} ORDER BY commitdate desc limit 0,12
	</select>-->

	<!-- 根据基站id查询自建基站最近十二条巡检 -->
	<select id="selectInspectListForSelfBs" parameterType="String" resultType="map">
		select * from xhgmnet_operations_inspection_selfbs where bsid=#{bsId} ORDER BY commitdate desc limit 0,12
	</select>

	<!-- app根据用户id查询用户名称 -->
	<select id="selectUserName" parameterType="String" resultType="map">
		select userName from xhgmnet_web_user where user=#{userId}
	</select>

    <!-- app根据基站id查询基站基本信息 -->
	<select id="selectByBsId" parameterType="String" resultType="map" useCache="true">
		select bsId as bsid,name as bsname,level as bslevel from xhgmnet_bs_station where bsId=#{bsId}
	</select>

	<!-- 根据基站id查询基站相关业务信息 -->
	<select id="selectInfoByBsId" parameterType="String" resultType="map" useCache="true">
		select a.bsId as bsid,name as bsname,hometype as bstype,address,b.link,period from xhgmnet_bs_station as a LEFT JOIN view_bsstatus as b on a.bsId=b.bsId where a.bsId=#{bsId}
	</select>

	<!-- app根据基站id查询基站基本信息(new) -->
	<select id="selectByBsIdNew" parameterType="String" resultType="map" useCache="true">
		select bsId as bsid,name as bsname,level as bslevel,hometype as bstype,period from xhgmnet_bs_station where bsId=#{bsId}
	</select>
	
	<!-- 更新派单状态 -->
	<update id="updateUserStatus" parameterType="map">
		update xhgmnet_operations_fault_task_order set status=#{status}
		<if test="break_order !=null and break_order !=''">
			,break_order=#{break_order}
		</if>
		 where serialnumber=#{serialNum}
	</update>

	<!-- 更新发电状态 -->
	<update id="updateElecStatus" parameterType="map">
		update xhgmnet_operations_bs_elec_generation set status=#{status}
		where serialnumber=#{serialnumber}
	</update>
	
	<!-- 查询派单处理情况 -->
	<select id="selectOrderStatus" parameterType="String" resultType="map" useCache="true">
		select status from xhgmnet_operations_fault_task_order where serialnumber=#{serialNum}
	</select>
	
	<!-- 提交故障完结单时更新数据库 -->
	<update id="updateFaultOrder" parameterType="map">
		update xhgmnet_operations_fault_task_order set bsid=#{bsid},bsname=#{bsname},dispatchtime=#{dispatchtime},dispatchman=#{dispatchman},
		errtype=#{errtype},errlevel=#{errlevel},errfoundtime=#{errfoundtime},errslovetime=#{errslovetime},progress=#{progress},proresult=#{proresult},
		break_order=#{hungup},workman=#{workman},auditor=#{auditor},longitude=#{longitude},latitude=#{latitude},address=#{address} where serialnumber=#{serialnumber}
		and userid=#{userid}
	</update>

	<!-- 插入基站巡检表数据 表名待定！！！ -->
	<insert id="insertBsTable" parameterType="List">
		INSERT INTO xhgmnet_operations_inspection_selfbs VALUES(id,
		<foreach collection="list" item="item" index="index"
				 separator=",">
			#{item}
		</foreach>
		)
	</insert>
	
	<!-- 插入移动基站巡检表数据 -->
	<insert id="insertMoveBsTable" parameterType="List">
		INSERT INTO xhgmnet_operations_inspection_movebs VALUES(id,
		<foreach collection="list" item="item" index="index"
			separator=",">
			#{item}
		</foreach>
		)
	</insert>

	<!-- 插入自建基站巡检表数据 -->
	<insert id="insertOwnBsTable" parameterType="List">
		INSERT INTO xhgmnet_operations_inspection_selfbs VALUES(id,
		<foreach collection="list" item="item" index="index"
			separator=",">
			#{item}
		</foreach>
		)
	</insert>
	<!-- 插入网管巡检作业表 -->
	<insert id="insertNetTable" parameterType="List">
		INSERT INTO xhgmnet_operations_inspection_net VALUES(id,
		<foreach collection="list" item="item" index="index"
			separator=",">
			#{item}
		</foreach>
		)
	</insert>
	<!-- 插入调度台作业表 -->
	<insert id="insertDispatchTable" parameterType="List">
		INSERT INTO xhgmnet_operations_inspection_dispatch VALUES(id,
		<foreach collection="list" item="item" index="index"
			separator=",">
			#{item}
		</foreach>
		)
	</insert>
	
	<!-- 查询最近一分钟手台gps信息 -->
	<select id="selectForGpsDst" resultType="map" parameterType="map">
		select srcId,longitude,latitude from (select * from ${currentMonth} where infoTime > DATE_SUB(NOW(),INTERVAL 1 MINUTE) 
		and srcId in (
		<foreach collection="list" item="item" index="index"
			separator=",">
			#{item}
		</foreach>
		) ORDER BY infoTime DESC) as gpsTable GROUP BY srcId
	</select>
	
	<!-- 新增终端号 -->
	<insert id="addRadioId" parameterType="map">
		insert into xhgmnet_radio_gis_visable(radioId,radioName,visable) values (#{radioIdAdd},#{radioIdAdd},"0")
	</insert>
	
	<!-- 查询所有需要显示的手台 -->
	<select id="selectForAllVisable" resultType="String">
		select radioId from xhgmnet_radio_gis_visable where visable=1
	</select>
	
	<!-- 查询所有手台显示情况 -->
	<select id="selectForAllVisableStatus" resultType="map">
		select * from xhgmnet_radio_gis_visable
	</select>
	
	<!-- 更新GIS终端显示情况 -->
	<update id="saveForAllVisable" parameterType="map">
        update xhgmnet_radio_gis_visable
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="visable = case" suffix="end,">
                <foreach collection="listMap" item="item" index="index">
                     <if test="item.visable !=null and item.visable != -1">
                         when radioId=#{item.radioId} then #{item.visable}
                     </if>
                </foreach>
            </trim>
        </trim>
        where radioId in 
		<foreach collection="listMap" index="index" item="item" separator="," open="(" close=")">
            #{item.radioId}
        </foreach>
    </update>
	
	<!-- 查询该用户的地图初始化信息 -->
	<select id="selectForMapInitByUser" resultType="String" parameterType="String">
		select mapInit from xhgmnet_web_user where user=#{userId}
	</select>
	
	<!-- 更新该用户的地图初始化信息 -->
	<update id="updateForMapInitByUser" parameterType="map">
		update xhgmnet_web_user set mapInit=#{mapInit} where user=#{userId}
	</update>
	
	<!-- 查询所有基站信息 -->
	<select id="selectForAllBsList" resultType="map">
		select bsid,name as bsname,lat as latitude,lng as longitude,address from xhgmnet_bs_station where lat!=0 and lng!=0 and lat is not null and lng is not null
	</select>
	
	<!-- 插入在线用户的位置信息 -->
	<insert id="appInsertGpsInfoUp" parameterType="map">
		insert into xhgmnet_app_location(userId,name,lat,lng,address) values(#{userId},#{name},#{lat},#{lng},#{address})
	</insert>
	
	<!-- 查询所有在线用户的最新位置信息 -->
	<select id="selectForAllAppLocation" parameterType="List" resultType="map">
		select a.userId as userid,name,lat as latitude,lng as longitude,address from xhgmnet_app_location  as a JOIN (
		select userId,MAX(uploadTime) uploadTime from xhgmnet_app_location WHERE
		userId in (
		<foreach collection="list" item="item" index="index"
				 separator=",">
			#{item}
		</foreach>
		) GROUP BY userId) b on a.userId=b.userId and a.uploadTime=b.uploadTime
	</select>

	<!-- 更新派单状态 -->
	<update id="updateGenTableStatus" parameterType="map">
		update xhgmnet_operations_bs_elec_generation set status=#{status} where serialnumber=#{serialnumber}
	</update>

	<!-- 查询发电电压和电流 -->
	<select id="selectForGenVI" parameterType="String" resultType="map">
		select b.* from xhgmnet_emh_fsuid4bsid as a LEFT JOIN xhgmnet_emh_sensor_status as b on a.fsuId = b.fsuId where a.siteId=#{bsId} and  (singleId = "092301" or singleId = "092304")
	</select>
	
	<!-- 查询市电恢复时间 -->
	<select id="selectForPowerOnTime" parameterType="String" resultType="map">
		select b.* from xhgmnet_emh_fsuid4bsid as a LEFT JOIN xhgmnet_emh_sensor_alarm as b on a.fsuId = b.fsuId where a.siteId=#{bsId} and alarmId="017021" and alarmFlag="END" ORDER BY startTime desc limit 1
	</select>

	<!-- 查询停止发电时间 -->
	<select id="selectForGenOffTime" parameterType="String" resultType="map">
		select b.* from xhgmnet_emh_fsuid4bsid as a LEFT JOIN xhgmnet_emh_sensor_alarm as b on a.fsuId = b.fsuId where a.siteId=#{bsId} and alarmId="017031" and alarmFlag="BEGIN" ORDER BY startTime desc limit 1
	</select>

	<!-- 更新发电记录表 -->
	<update id="updateForGenTable" parameterType="com.tcpBean.GenTable">
		update xhgmnet_operations_bs_elec_generation set gen_start_time=#{genontime},generation_v=#{genv},generation_i=#{geni},check_user=#{auditor},address=#{address},check_time=#{audittime},gen_on_note=#{remarkgenon},poweron_time=#{powerontime},gen_end_time=#{genofftime},gen_off_time=#{removegentime},gen_off_note=#{remarkgenoff},status=4,gen_on_pic=#{gen_on_pic},gen_off_pic=#{gen_off_pic} where serialnumber=#{serialnumber}
	</update>
	
	<!-- 根据基站名称模糊查询基站列表 -->
	<select id="selectBsListByName" parameterType="String" resultType="map">
		select bsId as bsid,name as bsname from xhgmnet_bs_station where name like concat("%",#{name},"%");
	</select>
</mapper>
