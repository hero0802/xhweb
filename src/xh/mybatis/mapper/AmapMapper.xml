<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xh.mybatis.mapper.AmapMapper">
	<!--根据区域信息查询所有基站wlk -->
	<select id="bsByBoth" resultType="java.util.HashMap"
		parameterType="map" useCache="true">
		select a.*,b.link as bsStatus from xhgmnet_bs_station as a left join
		xhgmnet_bsstatus as b on a.bsId=b.bsId where 1=1
		<if test="level!=null and level.size()>0">
		and a.level in (
		<foreach collection="level" item="t" separator=",">
			#{t}
		</foreach>
		)
		</if>
		<if test="zone!=null and zone.size()>0">
		and a.zone in (
		<foreach collection="zone" item="z" separator=",">
			#{z}
		</foreach>
		)
		</if>
		group by a.bsId
	</select>

	<!--不规则区域圈选查询 -->
	<select id="polyline" parameterType="map"
		resultType="java.util.HashMap" useCache="true">
		select a.*,b.link as bsStatus from xhgmnet_bs_station as a left join
		xhgmnet_bsstatus as b on a.bsId=b.bsId where a.bsId in 
		<foreach item="item" index="index" collection="groupData" open="(" separator="," close=")">
         #{item}
        </foreach>
		group by a.bsId order by bsId asc limit #{start},#{limit}
	</select>
	<!--不规则区域圈选总数 -->
	<select id="polylineCount" parameterType="map" resultType="int"
		useCache="true">
		select count(*) from xhgmnet_bs_station where bsId in 
		<foreach item="item" index="index" collection="groupData" open="(" separator="," close=")">
         #{item}
        </foreach>
	</select>
	
	<!--区域圈选查询 -->
	<select id="rectangle" parameterType="map"
		resultType="map" useCache="true">
		select a.*,b.link as bsStatus from xhgmnet_bs_station as a left join
		xhgmnet_bsstatus as b on a.bsId=b.bsId where lng between #{smallLng} and #{bigLng} and lat
		between #{smallLat} and #{bigLat}
		GROUP BY a.bsId order by a.bsId asc limit #{start},#{limit}
	</select>
	<!--区域圈选总数 -->
	<select id="rectangleCount" parameterType="map" resultType="int"
		useCache="true">
		select count(*) from xhgmnet_bs_station where lng between
		#{smallLng} and #{bigLng} and lat between #{smallLat} and #{bigLat}
	</select>

</mapper>
